"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[6096],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,h=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},81147:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),i=n(46092),s=n(72525),l=["components"],p={title:"QuestDB 6.3 Release Highlights",author:"Miguel Arregui",author_title:"QuestDB Engineering",author_url:"https://github.com/marregui",author_image_url:"https://avatars.githubusercontent.com/marregui",description:"QuestDB 6.3 Release Highlights",keywords:["questdb","release","performance","database","sql"],tags:["release","product"],image:"/img/blog/2022-05-09/cover.png"},u={permalink:"/blog/2022/05/09/questdb-release-6-3",source:"@site/blog/2022-05-09-questdb-release-6-3.mdx",title:"QuestDB 6.3 Release Highlights",description:"QuestDB 6.3 Release Highlights",date:"2022-05-09T00:00:00.000Z",formattedDate:"May 9, 2022",tags:[{label:"release",permalink:"/blog/tags/release"},{label:"product",permalink:"/blog/tags/product"}],readingTime:2.75,truncated:!0,prevItem:{title:"The Landscape of Timeseries Databases",permalink:"/blog/2022/05/09/the-landscape-of-timeseries-databases"},nextItem:{title:"Time Series Data Analytics with QuestDB and Cube.js",permalink:"/blog/2022/04/26/time-series-data-analytics-with-questdb-and-cube"}},c=[{value:"Multi-threaded SQL execution for filter queries",id:"multi-threaded-sql-execution-for-filter-queries",children:[]},{value:"Filesystem snapshot support for cloud environments (AWS, Azure, GCP)",id:"filesystem-snapshot-support-for-cloud-environments-aws-azure-gcp",children:[]},{value:"Performance optimisation for LATEST ON syntax",id:"performance-optimisation-for-latest-on-syntax",children:[]},{value:"Read-only mode for PGWire protocol",id:"read-only-mode-for-pgwire-protocol",children:[]},{value:"SQL syntax formatting and table name autocomplete in web console",id:"sql-syntax-formatting-and-table-name-autocomplete-in-web-console",children:[]},{value:"Cheers",id:"cheers",children:[]}],m={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{alt:"QuestDB 6.3 Release Highlights",height:800,src:"/img/blog/2022-05-09/cover.png",width:900,mdxType:"Banner"}),(0,a.kt)("p",null,"May 2022 brings ",(0,a.kt)("strong",{parentName:"p"},"QuestDB 6.3"),", a release focused on ",(0,a.kt)("em",{parentName:"p"},"performance and usability")," based on the vital feedback of our\n",(0,a.kt)("a",{parentName:"p",href:"https://slack.questdb.io/"},"user community")," and ",(0,a.kt)("a",{parentName:"p",href:"https://questdb.io/customers/"},"customers"),". Here's a roundup of changes\nthat have just landed in the latest, greatest version yet."),(0,a.kt)("h2",{id:"multi-threaded-sql-execution-for-filter-queries"},"Multi-threaded SQL execution for filter queries"),(0,a.kt)("p",null,"We have parallelized and achieved significant performance gains in SQL statements that contain a ",(0,a.kt)("inlineCode",{parentName:"p"},"where")," clause with\nsimple arithmetic expressions, and for queries that make use of ",(0,a.kt)("inlineCode",{parentName:"p"},"limit")," with both positive and negative offsets. This\nis thanks to the improved ",(0,a.kt)("a",{parentName:"p",href:"https://questdb.io/blog/2022/01/12/jit-sql-compiler/"},"JIT sub-system"),", which is now always\nswitched on by default, and through extensive use of our in-house ",(0,a.kt)("a",{parentName:"p",href:"https://questdb.io/blog/2021/11/03/interthread"},"async bus"),"."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://demo.questdb.io/"},"Enter the Demo Box")," and experience how ",(0,a.kt)("strong",{parentName:"p"},"1.63 x 10",(0,a.kt)("sup",null,"9"))," rows are blazed through in\nmilliseconds:"),(0,a.kt)(s.Z,{alt:"A screenshot of the QuestDB 6.3 speed example",src:"/img/blog/2022-05-09/speed-example.png",width:552,height:343,mdxType:"Screenshot"}),(0,a.kt)("h2",{id:"filesystem-snapshot-support-for-cloud-environments-aws-azure-gcp"},"Filesystem snapshot support for cloud environments (AWS, Azure, GCP)"),(0,a.kt)("p",null,"We have optimised query cache retention for all ingestion methods (Http, ILP, PGWire), along with providing support for\ndatabase backups via filesystem snapshots. Combined, these enable live database backups to be inexpensive in terms of\nimpact on ongoing ingestion, SQL execution performance, and cloud costs."),(0,a.kt)("p",null,"You can now backup your database live via cloud-native filesystem snapshots in three steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Issue statement ",(0,a.kt)("inlineCode",{parentName:"li"},"SNAPSHOT PREPARE"),", which locks all table readers and flushes filesystem caches to disk (through\nthe sync syscall). "),(0,a.kt)("li",{parentName:"ol"},"Invoke the cloud-specific snapshot procedure and leave it running for however long it needs."),(0,a.kt)("li",{parentName:"ol"},"Issue statement ",(0,a.kt)("inlineCode",{parentName:"li"},"SNAPSHOT COMPLETE")," to release the readers. You do ",(0,a.kt)("strong",{parentName:"li"},"not have to wait")," for #2 to complete. ")),(0,a.kt)("p",null,"This feature can be disabled by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"cairo.snapshot.recovery.enabled")," to false."),(0,a.kt)("h2",{id:"performance-optimisation-for-latest-on-syntax"},"Performance optimisation for LATEST ON syntax"),(0,a.kt)("p",null,"We have optimised the execution of ",(0,a.kt)("inlineCode",{parentName:"p"},"LATEST ON")," statements over un-indexed symbol columns to achieve two orders of\nmagnitude performance gains ",(0,a.kt)("strong",{parentName:"p"},"without the need for indexes"),". The following SQL creates a sample table containing\n500_000 rows and then finds the latest sentiment per fiat currency: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"CREATE TABLE sample_table AS (\n    SELECT \n        rnd_symbol('Dollar', 'Euro', 'Hryvnia', 'Yuan') fiat,\n        rnd_int(1, 1000, 0) sentiment,\n        timestamp_sequence(0, 3600000000L) ts \n    FROM long_sequence(500000)\n) TIMESTAMP(ts) PARTITION BY MONTH;\n\nSELECT * FROM sample_table \nWHERE fiat in ('Dollar', 'Euro', 'Hryvnia', 'Yuan') \nLATEST ON ts partition by fiat;\n")),(0,a.kt)("h2",{id:"read-only-mode-for-pgwire-protocol"},"Read-only mode for PGWire protocol"),(0,a.kt)("p",null,"You can now make connections to QuestDB over the PGWire protocol in read-only mode by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"pg.security.readonly"),"\nto true in ",(0,a.kt)("inlineCode",{parentName:"p"},"server.conf"),". Attempts to create, drop, truncate and alter tables, as well as to insert data will result in\nexception ",(0,a.kt)("strong",{parentName:"p"},"org.postgresql.util.PSQLException: ERROR: Write permission denied"),". "),(0,a.kt)("h2",{id:"sql-syntax-formatting-and-table-name-autocomplete-in-web-console"},"SQL syntax formatting and table name autocomplete in web console"),(0,a.kt)("p",null,"The web console auto-completes table names:"),(0,a.kt)(s.Z,{alt:"QuestDB 6.3 Web Console Autocomplete example",src:"/img/blog/2022-05-09/web-console-auto-complete.png",width:2044,height:820,mdxType:"Screenshot"}),(0,a.kt)("p",null,"and allows you to format SQL statements by means of options ",(0,a.kt)("inlineCode",{parentName:"p"},"Format Document")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Format Selection"),", available in the\ncontext menu of the SQL editor (right click):"),(0,a.kt)(s.Z,{alt:"QuestDB 6.3 Web Console SQL autoformatting example",src:"/img/blog/2022-05-09/web-console-format-sql.png",width:2058,height:854,mdxType:"Screenshot"}),(0,a.kt)("h2",{id:"cheers"},"Cheers"),(0,a.kt)("p",null,"Read the ",(0,a.kt)("strong",{parentName:"p"},"full details")," of the release in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb/releases"},"release notes page"),"."),(0,a.kt)(s.Z,{alt:"Vlad Ilyushchenko and Alex Pelagenko, two world-class performance engineers enjoying coffee at AWS Summit London 2022.",src:"/img/blog/2022-05-09/aws-conf.png",width:700,height:688,title:"Vlad Ilyushchenko and Alex Pelagenko, two world-class performance engineers enjoying coffee at AWS Summit London 2022.",mdxType:"Screenshot"}))}d.isMDXComponent=!0},86010:function(e,t,n){function r(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function o(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(o&&(o+=" "),o+=t);return o}n.d(t,{Z:function(){return o}})}}]);