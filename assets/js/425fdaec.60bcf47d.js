"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[5800],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(a),u=r,g=c["".concat(l,".").concat(u)]||c[u]||m[u]||i;return a?n.createElement(g,o(o({ref:t},d),{},{components:a})):n.createElement(g,o({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},115:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},metadata:function(){return l},toc:function(){return s},default:function(){return m}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),o=["components"],p={title:"Data retention",description:"How to employ a data retention strategy to delete old data and save disk space"},l={unversionedId:"operations/data-retention",id:"operations/data-retention",isDocsHomePage:!1,title:"Data retention",description:"How to employ a data retention strategy to delete old data and save disk space",source:"@site/docs/operations/data-retention.md",sourceDirName:"operations",slug:"/operations/data-retention",permalink:"/docs/operations/data-retention",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/operations/data-retention.md",version:"current",frontMatter:{title:"Data retention",description:"How to employ a data retention strategy to delete old data and save disk space"},sidebar:"docs",previous:{title:"Capacity planning",permalink:"/docs/operations/capacity-planning"},next:{title:"Health monitoring",permalink:"/docs/operations/health-monitoring"}},s=[{value:"Background",id:"background",children:[]},{value:"Strategy for data retention",id:"strategy-for-data-retention",children:[{value:"Dropping partitions",id:"dropping-partitions",children:[]},{value:"Example",id:"example",children:[]}]}],d={toc:s};function m(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"background"},"Background"),(0,i.kt)("p",null,"The nature of time-series data is that the relevance of information diminishes\nover time. If stale data is no longer required, users can delete old data from\nQuestDB to either save disk space or adhere to a data retention policy. This is\nachieved in QuestDB by removing data partitions from a table."),(0,i.kt)("p",null,"This page provides a high-level overview of partitioning with examples to drop\ndata by date. For more details on partitioning, see the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/concept/partitions"},"partitioning")," page."),(0,i.kt)("h2",{id:"strategy-for-data-retention"},"Strategy for data retention"),(0,i.kt)("p",null,"A simple approach to removing stale data is to drop data that has been\npartitioned by time. A table must have a\n",(0,i.kt)("a",{parentName:"p",href:"/docs/concept/designated-timestamp"},"designated timestamp")," assigned and a\npartitioning strategy specified during a ",(0,i.kt)("inlineCode",{parentName:"p"},"CREATE TABLE")," operation to achieve\nthis."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Users cannot alter the partitioning strategy after a table is created."))),(0,i.kt)("p",null,"Tables can be partitioned by one of the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"YEAR")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MONTH")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DAY")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HOUR"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Creating a table and partitioning by DAY"',title:'"Creating',a:!0,table:!0,and:!0,partitioning:!0,by:!0,'DAY"':!0},"CREATE TABLE my_table(ts TIMESTAMP, symb SYMBOL, price DOUBLE) timestamp(ts)\nPARTITION BY DAY;\n")),(0,i.kt)("h3",{id:"dropping-partitions"},"Dropping partitions"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"DROP PARTITION")," with care as QuestDB ",(0,i.kt)("strong",{parentName:"p"},"cannot recover data from dropped\npartitions"),"."))),(0,i.kt)("p",null,"To drop partitions, users can use the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/sql/alter-table-drop-partition"},"ALTER TABLE DROP PARTITION"),"\nsyntax. Partitions may be dropped by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"DROP PARTITION LIST")," - specifying a comma-separated list of partitions to\ndrop"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"--Delete a partition\nALTER TABLE my_table DROP PARTITION LIST '2021-01-01';\n\n--Delete a list of two partitions\nALTER TABLE my_table DROP PARTITION LIST '2021-01-01', '2021-01-02';\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"WHERE timestamp =")," - exact date matching by timestamp"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"ALTER TABLE my_table DROP PARTITION\nWHERE timestamp = to_timestamp('2021-01-01', 'yyyy-MM-dd');\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"WHERE timestamp <")," - using comparison operators (",(0,i.kt)("inlineCode",{parentName:"p"},"<")," / ",(0,i.kt)("inlineCode",{parentName:"p"},">"),") to delete by time\nrange relative to a timestamp. Note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"now()")," function may be used to\nautomate dropping of partitions relative to the current time, i.e.:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"--Drop partitions older than 30 days\nWHERE timestamp < dateadd('d', -30, now())\n")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Usage notes:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The most chronologically recent partition cannot be deleted"),(0,i.kt)("li",{parentName:"ul"},"Arbitrary partitions may be dropped, which means they may not be the oldest\nchronologically. Depending on the types of queries users are performing on a\ndataset, it may not be desirable to have gaps caused by dropped partitions.")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"The following example demonstrates how to create a table with partitioning and\nto drop partitions based on time. This example produces 5 days' worth of data\nwith one incrementing ",(0,i.kt)("inlineCode",{parentName:"p"},"LONG")," value inserted per hour."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Create a partitioned table and generate data"',title:'"Create',a:!0,partitioned:!0,table:!0,and:!0,generate:!0,'data"':!0},"CREATE TABLE my_table (timestamp TIMESTAMP, x LONG) timestamp(timestamp)\nPARTITION BY DAY;\n\nINSERT INTO my_table\nSELECT timestamp_sequence(\n    to_timestamp('2021-01-01T00:00:00', 'yyyy-MM-ddTHH:mm:ss'),100000L * 36000), x\nFROM long_sequence(120);\n")),(0,i.kt)("p",null,"For reference, the following functions are used to generate the example data:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/function/timestamp-generator#timestamp_sequence"},"timestamp sequence"),"\nwith 1 hour stepping"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/function/row-generator#long_sequence"},"row generator")," with\n",(0,i.kt)("inlineCode",{parentName:"li"},"long_sequence()")," function which creates a ",(0,i.kt)("inlineCode",{parentName:"li"},"x:long")," column")),(0,i.kt)("p",null,"The result of partitioning is visible when listing as directories on disk:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="path/to/<QuestDB-root>/db"',title:'"path/to/<QuestDB-root>/db"'},"my_table\n\u251c\u2500\u2500 2021-01-01\n\u251c\u2500\u2500 2021-01-02\n\u251c\u2500\u2500 2021-01-03\n\u251c\u2500\u2500 2021-01-04\n\u2514\u2500\u2500 2021-01-05\n")),(0,i.kt)("p",null,"Partitions can be dropped using the following query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"--Delete days before 2021-01-03\nALTER TABLE my_table DROP PARTITION\nWHERE timestamp < to_timestamp('2021-01-03', 'yyyy-MM-dd');\n")))}m.isMDXComponent=!0}}]);