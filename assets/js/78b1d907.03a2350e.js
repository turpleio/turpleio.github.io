"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[5740],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(n),g=o,m=f["".concat(c,".").concat(g)]||f[g]||s[g]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},67750:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return s}});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),i=["components"],l={title:"Speeding up InfluxDB line protocol",author:"Tancrede Collard",author_title:"QuestDB Team",author_url:"https://github.com/TheTanc",author_image_url:"https://avatars.githubusercontent.com/TheTanc",description:"Comparison between InfluxDB and QuestDB regarding the performance of the line protocol when ingesting data.",keywords:["timeseries","influxdb","questdb","database"],tags:["engineering","performance","influxdb","telegraf"],image:"/img/blog/shared/og-influxdb.png"},c={permalink:"/blog/2019/12/19/lineprot",source:"@site/blog/2019-12-19-lineprot.md",title:"Speeding up InfluxDB line protocol",description:"Comparison between InfluxDB and QuestDB regarding the performance of the line protocol when ingesting data.",date:"2019-12-19T00:00:00.000Z",formattedDate:"December 19, 2019",tags:[{label:"engineering",permalink:"/blog/tags/engineering"},{label:"performance",permalink:"/blog/tags/performance"},{label:"influxdb",permalink:"/blog/tags/influxdb"},{label:"telegraf",permalink:"/blog/tags/telegraf"}],readingTime:5.08,truncated:!0,prevItem:{title:"Aggregating billions of rows per second with SIMD",permalink:"/blog/2020/04/02/using-simd-to-aggregate-billions-of-rows-per-second"}},u=[],p={toc:u};function s(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"InfluxDB is the current market leader in time series. This post examines their\ningestion format called ",(0,a.kt)("strong",{parentName:"p"},"InfluxDB line protocol (ILP)")," and compares data\ningestion performance between QuestDB and InfluxDB. We'll look at data loss over\nUDP and some of the reasons why QuestDB is more efficient at ingesting records\nin ILP."))}s.isMDXComponent=!0}}]);