"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[9963],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,g=c["".concat(u,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(g,i(i({ref:t},o),{},{components:n})):r.createElement(g,i({ref:t},o))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},355:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),i=["components"],s={title:"Pattern matching operators",sidebar_label:"Pattern matching",description:"Pattern matching operators reference documentation."},u={unversionedId:"reference/operators/pattern-matching",id:"reference/operators/pattern-matching",isDocsHomePage:!1,title:"Pattern matching operators",description:"Pattern matching operators reference documentation.",source:"@site/docs/reference/operators/pattern-matching.md",sourceDirName:"reference/operators",slug:"/reference/operators/pattern-matching",permalink:"/docs/reference/operators/pattern-matching",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/reference/operators/pattern-matching.md",version:"current",sidebar_label:"Pattern matching",frontMatter:{title:"Pattern matching operators",sidebar_label:"Pattern matching",description:"Pattern matching operators reference documentation."},sidebar:"docs",previous:{title:"Bitwise operators",permalink:"/docs/reference/operators/bitwise"},next:{title:"Spatial operators",permalink:"/docs/reference/operators/spatial"}},p=[{value:"~ (match) and !~ (does not match)",id:"-match-and--does-not-match",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Return value",id:"return-value",children:[]}]},{value:"LIKE/ILIKE",id:"likeilike",children:[{value:"Arguments",id:"arguments-1",children:[]},{value:"Return value",id:"return-value-1",children:[]},{value:"Description",id:"description",children:[]},{value:"Examples",id:"examples",children:[]}]},{value:"regexp_replace",id:"regexp_replace",children:[{value:"Arguments:",id:"arguments-2",children:[]},{value:"Return value",id:"return-value-2",children:[]},{value:"Examples:",id:"examples-1",children:[]}]}],o={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This page describes the available operators to assist with performing pattern\nmatching. For operators using regular expressions (",(0,l.kt)("inlineCode",{parentName:"p"},"regex")," in the syntax), QuestDB uses\n",(0,l.kt)("a",{parentName:"p",href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Pattern.html"},"Java regular expression implementation"),"."),(0,l.kt)("h2",{id:"-match-and--does-not-match"},"~ (match) and !~ (does not match)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"(string) ~ (regex)")," - returns true if the ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," value matches a regular expression, ",(0,l.kt)("inlineCode",{parentName:"li"},"regex"),", otherwise returns false (case sensitive match)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"(string) !~ (regex)")," - returns true if the ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," value fails to match a regular expression, ",(0,l.kt)("inlineCode",{parentName:"li"},"regex"),", otherwise returns false (case sensitive match).")),(0,l.kt)("h3",{id:"arguments"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string")," is an expression that evaluates to the ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," data type."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"regex")," is any regular expression pattern.")),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),"."),(0,l.kt)("h2",{id:"likeilike"},"LIKE/ILIKE"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"(string) LIKE (pattern)")," - returns true if the ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," value matches ",(0,l.kt)("inlineCode",{parentName:"li"},"pattern"),", otherwise returns false (case sensitive match)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"(string) ILIKE (pattern)")," - returns true if the ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," value matches ",(0,l.kt)("inlineCode",{parentName:"li"},"pattern"),", otherwise returns false (case insensitive match).")),(0,l.kt)("h3",{id:"arguments-1"},"Arguments"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string")," is an expression that evaluates to the ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," data type."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pattern")," is a pattern which can contain wildcards like ",(0,l.kt)("inlineCode",{parentName:"li"},"_")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"%"),".")),(0,l.kt)("h3",{id:"return-value-1"},"Return value"),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),"."),(0,l.kt)("h3",{id:"description"},"Description"),(0,l.kt)("p",null,"If the pattern doesn't contain wildcards, then the pattern represents the string itself."),(0,l.kt)("p",null,"The wildcards which can be used in pattern are interpreted as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_")," - matches any single character."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"%")," - matches any sequence of zero or more characters.")),(0,l.kt)("p",null,"Wildcards can be used as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT 'quest' LIKE 'quest' ;\n-- Returns true\nSELECT 'quest' LIKE 'ques_';   \n-- Returns true   \nSELECT 'quest' LIKE 'que%';\n-- Returns true   \nSELECT 'quest' LIKE '_ues_';\n-- Returns true\nSELECT 'quest' LIKE 'q_'\n-- Returns false\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ILIKE")," performs a case insensitive match as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT 'quest' ILIKE 'QUEST';\n-- Returns true\nSELECT 'qUeSt' ILIKE 'QUEST';\n-- Returns true\nSELECT 'quest' ILIKE 'QUE%';\n-- Returns true\nSELECT 'QUEST' ILIKE '_ues_';\n-- Returns true\n")),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("h4",{id:"like"},"LIKE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT * FROM trades\nWHERE symbol LIKE '%-USD'\nLATEST ON timestamp PARTITION BY symbol;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"symbol"),(0,l.kt)("th",{parentName:"tr",align:null},"side"),(0,l.kt)("th",{parentName:"tr",align:null},"price"),(0,l.kt)("th",{parentName:"tr",align:null},"amount"),(0,l.kt)("th",{parentName:"tr",align:null},"timestamp"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ETH-USD"),(0,l.kt)("td",{parentName:"tr",align:null},"sell"),(0,l.kt)("td",{parentName:"tr",align:null},"1348.13"),(0,l.kt)("td",{parentName:"tr",align:null},"3.22455108"),(0,l.kt)("td",{parentName:"tr",align:null},"2022-10-04T15:25:58.834362Z")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"BTC-USD"),(0,l.kt)("td",{parentName:"tr",align:null},"sell"),(0,l.kt)("td",{parentName:"tr",align:null},"20082.08"),(0,l.kt)("td",{parentName:"tr",align:null},"0.16591219"),(0,l.kt)("td",{parentName:"tr",align:null},"2022-10-04T15:25:59.742552Z")))),(0,l.kt)("h4",{id:"ilike"},"ILIKE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT * FROM trades\nWHERE symbol ILIKE '%-usd'\nLATEST ON timestamp PARTITION BY symbol;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"symbol"),(0,l.kt)("th",{parentName:"tr",align:null},"side"),(0,l.kt)("th",{parentName:"tr",align:null},"price"),(0,l.kt)("th",{parentName:"tr",align:null},"amount"),(0,l.kt)("th",{parentName:"tr",align:null},"timestamp"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ETH-USD"),(0,l.kt)("td",{parentName:"tr",align:null},"sell"),(0,l.kt)("td",{parentName:"tr",align:null},"1348.13"),(0,l.kt)("td",{parentName:"tr",align:null},"3.22455108"),(0,l.kt)("td",{parentName:"tr",align:null},"2022-10-04T15:25:58.834362Z")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"BTC-USD"),(0,l.kt)("td",{parentName:"tr",align:null},"sell"),(0,l.kt)("td",{parentName:"tr",align:null},"20082.08"),(0,l.kt)("td",{parentName:"tr",align:null},"0.16591219"),(0,l.kt)("td",{parentName:"tr",align:null},"2022-10-04T15:25:59.742552Z")))),(0,l.kt)("h2",{id:"regexp_replace"},"regexp_replace"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"regexp_replace (string1, regex , string2 )")," - provides substitution of new text\nfor substrings that match regular expression patterns."),(0,l.kt)("h3",{id:"arguments-2"},"Arguments:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string1")," is a source ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," value to be manipulated."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"regex")," is a regular expression pattern."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string2")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," value to replace part or the whole of the source value.")),(0,l.kt)("h3",{id:"return-value-2"},"Return value"),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),". The source string is returned unchanged if there is no match to the pattern. If\nthere is a match, the source string is returned with the replacement string\nsubstituted for the matching substring."),(0,l.kt)("h3",{id:"examples-1"},"Examples:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Example description -  regexp_replace"',title:'"Example',description:!0,"-":!0,"":!0,'regexp_replace"':!0},"SELECT regexp_replace('MYSQL is a great database', '^(\\S*)', 'QuestDB');\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"QuestDB is a great database\n")))}m.isMDXComponent=!0}}]);