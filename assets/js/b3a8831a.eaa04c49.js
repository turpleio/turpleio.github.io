"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[693],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),s=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(m.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,m=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(a),c=r,g=u["".concat(m,".").concat(c)]||u[c]||p[c]||o;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},24973:function(e,t,a){a.d(t,{Z:function(){return p},I:function(){return d}});var n=a(67294),r=/{\w+}/g,o="{}";function i(e,t){var a=[],i=e.replace(r,(function(e){var r=e.substr(1,e.length-2),i=null==t?void 0:t[r];if(void 0!==i){var l=n.isValidElement(i)?i:String(i);return a.push(l),o}return e}));return 0===a.length?e:a.every((function(e){return"string"==typeof e}))?i.split(o).reduce((function(e,t,n){var r;return e.concat(t).concat(null!==(r=a[n])&&void 0!==r?r:"")}),""):i.split(o).reduce((function(e,t,r){return[].concat(e,[n.createElement(n.Fragment,{key:r},t,a[r])])}),[])}function l(e){return i(e.children,e.values)}var m=a(57529);function s(e){var t,a=e.id,n=e.message;return null!==(t=m[null!=a?a:n])&&void 0!==t?t:n}function d(e,t){var a,n=e.message;return i(null!==(a=s({message:n,id:e.id}))&&void 0!==a?a:n,t)}function p(e){var t,a=e.children,r=e.id,o=e.values,i=null!==(t=s({message:a,id:r}))&&void 0!==t?t:a;return n.createElement(l,{values:o},i)}},82924:function(e,t,a){var n=a(67294).createContext(void 0);t.Z=n},7875:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},metadata:function(){return p},toc:function(){return u},default:function(){return g}});var n=a(83117),r=a(80102),o=(a(67294),a(3905)),i=a(24966),l=a(99226),m=a(72525),s=["components"],d={title:"Prometheus monitoring and alerting",sidebar_label:"Prometheus",description:"This document describes how to monitor QuestDB metrics such as memory consumption using the Prometheus metrics endpoint, and how to log alerts to Prometheus Alertmanager."},p={unversionedId:"third-party-tools/prometheus",id:"third-party-tools/prometheus",isDocsHomePage:!1,title:"Prometheus monitoring and alerting",description:"This document describes how to monitor QuestDB metrics such as memory consumption using the Prometheus metrics endpoint, and how to log alerts to Prometheus Alertmanager.",source:"@site/docs/third-party-tools/prometheus.md",sourceDirName:"third-party-tools",slug:"/third-party-tools/prometheus",permalink:"/docs/third-party-tools/prometheus",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/third-party-tools/prometheus.md",version:"current",sidebar_label:"Prometheus",frontMatter:{title:"Prometheus monitoring and alerting",sidebar_label:"Prometheus",description:"This document describes how to monitor QuestDB metrics such as memory consumption using the Prometheus metrics endpoint, and how to log alerts to Prometheus Alertmanager."},sidebar:"docs",previous:{title:"Updating data",permalink:"/docs/operations/updating-data"},next:{title:"Grafana",permalink:"/docs/third-party-tools/grafana"}},u=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Scraping Prometheus metrics from QuestDB",id:"scraping-prometheus-metrics-from-questdb",children:[]},{value:"Configuring Prometheus Alertmanager",id:"configuring-prometheus-alertmanager",children:[]}],c={toc:u};function g(e){var t=e.components,a=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Prometheus is an open-source systems monitoring and alerting toolkit. Prometheus\ncollects and stores metrics as time series data, i.e. metrics information is\nstored with the timestamp at which it was recorded, alongside optional key-value\npairs called labels."),(0,o.kt)("p",null,"Users can measure the internal status of a QuestDB instance via an HTTP endpoint\nexposed by QuestDB at port ",(0,o.kt)("inlineCode",{parentName:"p"},"9003"),". This document describes how to enable metrics\nvia this endpoint, how to configure Prometheus to scrape metrics from a QuestDB\ninstance, and how to enable alerting from QuestDB to Prometheus Alertmanager."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"QuestDB")," must be running and accessible. You can do so from\n",(0,o.kt)("a",{parentName:"p",href:"/docs/get-started/docker"},"Docker"),", the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/get-started/binaries"},"binaries"),", or\n",(0,o.kt)("a",{parentName:"p",href:"/docs/get-started/homebrew"},"Homebrew")," for macOS users.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Prometheus")," can be installed using\n",(0,o.kt)("a",{parentName:"p",href:"https://formulae.brew.sh/formula/prometheus"},"homebrew"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/u/prom"},"Docker"),", or directly as a binary. For more\ndetails, refer to the official Prometheus\n",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/download/"},"installation instructions"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Alertmanager")," can be run using\n",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/prom/alertmanager/"},"Docker")," or\n",(0,o.kt)("a",{parentName:"p",href:"https://quay.io/repository/prometheus/alertmanager"},"Quay"),", or can be built\nfrom source by following the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/prometheus/alertmanager#compiling-the-binary"},"build instructions on GitHub"),"."))),(0,o.kt)("h2",{id:"scraping-prometheus-metrics-from-questdb"},"Scraping Prometheus metrics from QuestDB"),(0,o.kt)("p",null,"QuestDB has a ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics")," HTTP endpoint on port ",(0,o.kt)("inlineCode",{parentName:"p"},"9003")," to expose Prometheus\nmetrics. Before being able to query metrics, they must be enabled via the\n",(0,o.kt)("inlineCode",{parentName:"p"},"metrics.enabled")," key in server configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini",metastring:'title="/path/to/server.conf"',title:'"/path/to/server.conf"'},"metrics.enabled=true\n")),(0,o.kt)("p",null,"When running QuestDB via Docker, port ",(0,o.kt)("inlineCode",{parentName:"p"},"9003")," must be exposed and the metrics\nconfiguration can be enabled via the ",(0,o.kt)("inlineCode",{parentName:"p"},"QDB_METRICS_ENABLED")," environment variable:"),(0,o.kt)(i.Z,{renderText:function(e){return(0,o.kt)(l.Z,{className:"language-shell",title:"Docker",mdxType:"CodeBlock"},'docker run \\\n  -e QDB_METRICS_ENABLED=TRUE \\\n  -p 8812:8812 -p 9000:9000 -p 9003:9003 -p 9009:9009 \\\n  -v "$(pwd):/var/lib/questdb" \\\n  questdb/questdb:'+e.name)},mdxType:"InterpolateReleaseData"}),(0,o.kt)("p",null,"To verify that metrics are being exposed correctly by QuestDB, navigate to\n",(0,o.kt)("inlineCode",{parentName:"p"},"http://<questdb_ip>:9003/metrics")," in a browser, where ",(0,o.kt)("inlineCode",{parentName:"p"},"<questdb_ip>")," is the IP\naddress of an instance, or execute a basic curl like the following example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Given QuestDB running at 127.0.0.1"',title:'"Given',QuestDB:!0,running:!0,at:!0,'127.0.0.1"':!0},"curl http://127.0.0.1:9003/metrics\n# TYPE questdb_json_queries_total counter\nquestdb_json_queries_total 0\n\n# TYPE questdb_memory_tag_MMAP_DEFAULT gauge\nquestdb_memory_tag_MMAP_DEFAULT 77872\n\n# TYPE questdb_memory_malloc_count gauge\nquestdb_memory_malloc_count 659\n\n# ...\n")),(0,o.kt)("p",null,"To configure Prometheus to scrape these metrics, provide the QuestDB instance IP\nand port ",(0,o.kt)("inlineCode",{parentName:"p"},"9003")," as a target. The following example configuration file\n",(0,o.kt)("inlineCode",{parentName:"p"},"questdb.yml")," assumes there is a running QuestDB instance on localhost\n(127.0.0.1) with port ",(0,o.kt)("inlineCode",{parentName:"p"},"9003")," available:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="questdb.yml"',title:'"questdb.yml"'},"global:\n  scrape_interval: 5s\n  external_labels:\n    monitor: 'questdb'\n\nscrape_configs:\n  - job_name: 'questdb'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:9003']\n")),(0,o.kt)("p",null,"Start Prometheus and pass this configuration on launch:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"prometheus --config.file=questdb.yml\n")),(0,o.kt)("p",null,"Prometheus should be available on ",(0,o.kt)("inlineCode",{parentName:"p"},"0.0.0.0:9090")," and navigating to\n",(0,o.kt)("inlineCode",{parentName:"p"},"http://0.0.0.0:9090/targets")," should show that QuestDB is being scraped\nsuccessfully:"),(0,o.kt)(m.Z,{alt:"Prometheus targets tab showing a QuestDB instance status",height:320,src:"/img/guides/prometheus/healthy-targets.png",width:750,mdxType:"Screenshot"}),(0,o.kt)("p",null,"In the graphing tab of Prometheus (",(0,o.kt)("inlineCode",{parentName:"p"},"http://0.0.0.0:9090/graph"),"), autocomplete\ncan be used to graph QuestDB-specific metrics which are all prefixed with\n",(0,o.kt)("inlineCode",{parentName:"p"},"questdb_"),":"),(0,o.kt)(m.Z,{alt:"Prometheus graphing tab showing QuestDB instance metrics on a chart",height:320,src:"/img/guides/prometheus/graphing-metrics.png",width:750,mdxType:"Screenshot"}),(0,o.kt)("p",null,"The following metrics are available:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Metric"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_commits_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of total commits of all types (in-order and out-of-order) executed on the database tables.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_o3_commits_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of total out-of-order (O3) commits executed on the database tables.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_committed_rows_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of total rows committed to the database tables.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_physically_written_rows_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of total rows physically written to disk. Greater than ",(0,o.kt)("inlineCode",{parentName:"td"},"committed_rows")," when ",(0,o.kt)("a",{parentName:"td",href:"/docs/guides/out-of-order-commit-lag"},"out-of-order ingestion")," is enabled. Write amplification is ",(0,o.kt)("inlineCode",{parentName:"td"},"questdb_physically_written_rows_total / questdb_committed_rows_total"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_rollbacks_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of total rollbacks executed on the database tables.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_json_queries_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of total REST API queries, including retries.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_json_queries_completed")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of successfully executed REST API queries.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_unhandled_errors_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of total unhandled errors occurred in the database. Such errors usually mean a critical service degradation in one of the database subsystems.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_jvm_major_gc_count")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of times major JVM garbage collection was triggered.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_jvm_major_gc_time")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Total time spent on major JVM garbage collection in milliseconds.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_jvm_minor_gc_count")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of times minor JVM garbage collection pause was triggered.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_jvm_minor_gc_time")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Total time spent on minor JVM garbage collection pauses in milliseconds.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_jvm_unknown_gc_count")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of times JVM garbage collection of unknown type was triggered. Non-zero values of this metric may be observed only on some, non-mainstream JVM implementations.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_jvm_unknown_gc_time")),(0,o.kt)("td",{parentName:"tr",align:"left"},"counter"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Total time spent on JVM garbage collection of unknown type in milliseconds. Non-zero values of this metric may be observed only on some, non-mainstream JVM implementations.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_MMAP_DEFAULT")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for mmaped files.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_DEFAULT")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of allocated untagged native memory.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_MMAP_O3")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for O3 mmapped files.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_O3")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for O3.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_RECORD_CHAIN")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for SQL record chains.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_MMAP_TABLE_WRITER")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for table writer mmapped files.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_TREE_CHAIN")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for SQL tree chains.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_MMAP_TABLE_READER")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for table reader mmapped files.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_COMPACT_MAP")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for SQL compact maps.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_FAST_MAP")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for SQL fast maps.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_LONG_LIST")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for long lists.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_HTTP_CONN")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for HTTP connections.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_PGW_CONN")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for PGWire connections.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_MMAP_INDEX_READER")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for index reader mmapped files.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_MMAP_INDEX_WRITER")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for index writer mmapped files.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_MMAP_INDEX_SLIDER")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory allocated for indexed column view mmapped files.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_tag_NATIVE_REPL")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Amount of memory mapped for replication tasks.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_free_count")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of times native memory was freed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_mem_used")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Current amount of allocated native memory.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_malloc_count")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of times native memory was allocated.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_realloc_count")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of times native memory was reallocated.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_jvm_free")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Current amount of free Java memory heap in bytes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_jvm_total")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Current size of Java memory heap in bytes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_memory_jvm_max")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Maximum amount of Java heap memory that can be allocated in bytes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_json_queries_cached")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of current cached REST API queries.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_pg_wire_select_queries_cached")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of current cached PGWire ",(0,o.kt)("inlineCode",{parentName:"td"},"SELECT")," queries.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"questdb_pg_wire_update_queries_cached")),(0,o.kt)("td",{parentName:"tr",align:"left"},"gauge"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Number of current cached PGWire ",(0,o.kt)("inlineCode",{parentName:"td"},"UPDATE")," queries.")))),(0,o.kt)("p",null,"All of the above metrics are volatile, i.e. they're collected since the current\ndatabase start."),(0,o.kt)("h2",{id:"configuring-prometheus-alertmanager"},"Configuring Prometheus Alertmanager"),(0,o.kt)("p",null,"QuestDB includes a log writer that sends any message logged at critical level\n(by default) to Prometheus\n",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/alerting/latest/alertmanager/"},"Alertmanager")," over a\nTCP/IP socket connection. To configure this writer, add it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"writers"),"\nconfig alongside other log writers. Details on logging configuration can be\nfound on the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/configuration#configuration-file"},"server configuration documentation"),"."),(0,o.kt)("p",null,"Alertmanager may be started via Docker with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run -p 127.0.0.1:9093:9093 --name alertmanager quay.io/prometheus/alertmanager\n")),(0,o.kt)("p",null,"To discover the IP address of this container, run the following command which\nspecifies ",(0,o.kt)("inlineCode",{parentName:"p"},"alertmanager")," as the container name:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' alertmanager\n")),(0,o.kt)("p",null,"To run QuestDB and point it towards Alertmanager for alerting, first create a\nfile ",(0,o.kt)("inlineCode",{parentName:"p"},"./conf/log.conf")," with the following contents. ",(0,o.kt)("inlineCode",{parentName:"p"},"172.17.0.2")," in this case is\nthe IP address of the docker container for alertmanager that was discovered by\nrunning the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker inspect ")," command above."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini",metastring:'title="./conf/log.conf"',title:'"./conf/log.conf"'},"# Which writers to enable\nwriters=stdout,alert\n\n# stdout\nw.stdout.class=io.questdb.log.LogConsoleWriter\nw.stdout.level=INFO\n\n# Prometheus Alerting\nw.alert.class=io.questdb.log.LogAlertSocketWriter\nw.alert.level=CRITICAL\nw.alert.alertTargets=172.17.0.2:9093\n")),(0,o.kt)("p",null,"Start up QuestDB in Docker using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'"Mounting a volume with the log.conf file"','"Mounting':!0,a:!0,volume:!0,with:!0,the:!0,"log.conf":!0,'file"':!0},'docker run \\\n  -p 9000:9000 -p 8812:8812 -p 9009:9009 -p 9003:9003 \\\n  -v "$(pwd)::/var/lib/questdb" \\\n  questdb/questdb:6.1.3\n')),(0,o.kt)("p",null,"When alerts are successfully triggered, QuestDB logs will indicate the sent and\nreceived status:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},'2021-12-14T18:42:54.222967Z I i.q.l.LogAlertSocketWriter Sending: 2021-12-14T18:42:54.122874Z I i.q.l.LogAlertSocketWriter Sending: 2021-12-14T18:42:54.073978Z I i.q.l.LogAlertSocketWriter Received [0] 172.17.0.2:9093: {"status":"success"}\n2021-12-14T18:42:54.223377Z I i.q.l.LogAlertSocketWriter Received [0] 172.17.0.2:9093: {"status":"success"}\n')),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The template used by QuestDB for alerts is user-configurable and is described in\nmore detail in the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/configuration#prometheus-alertmanager"},"server configuration"),"\ndocumentation."))))}g.isMDXComponent=!0},86010:function(e,t,a){function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}a.d(t,{Z:function(){return r}})}}]);