"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[200],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=u(n),d=r,f=h["".concat(s,".").concat(d)]||h[d]||c[d]||i;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},51277:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return h}});var o=n(83117),r=n(80102),i=(n(67294),n(3905)),a=n(46092),l=["components"],s={title:"Authentication for InfluxDB line protocol",author:"Patrick Mackinlay",author_title:"QuestDB Team",author_url:"https://github.com/patrickSpaceSurfer",description:"QuestDB has added authentication for InfluxDB line protocol over TCP",image:"/img/blog/2020-10-20/banner.jpg",tags:["engineering","authentication","influxdb"]},u={permalink:"/blog/2020/10/20/authentication-for-influx-line-protocol",source:"@site/blog/2020-10-20-authentication-for-influx-line-protocol.md",title:"Authentication for InfluxDB line protocol",description:"QuestDB has added authentication for InfluxDB line protocol over TCP",date:"2020-10-20T00:00:00.000Z",formattedDate:"October 20, 2020",tags:[{label:"engineering",permalink:"/blog/tags/engineering"},{label:"authentication",permalink:"/blog/tags/authentication"},{label:"influxdb",permalink:"/blog/tags/influxdb"}],readingTime:2.37,truncated:!0,prevItem:{title:"Community contribution from Alex Pelagenko improving our HTTP server",permalink:"/blog/2020/11/16/http-server-contribution"},nextItem:{title:"Build a monitoring dashboard with QuestDB and Grafana",permalink:"/blog/2020/10/19/grafana-tutorial"}},p=[{value:"Adding InfluxDB line protocol support to QuestDB",id:"adding-influxdb-line-protocol-support-to-questdb",children:[]},{value:"Adding authentication to InfluxDB line protocol",id:"adding-authentication-to-influxdb-line-protocol",children:[]}],c={toc:p};function h(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(a.Z,{alt:"An open lock with its key attached to it.",height:365,src:"/img/blog/2020-10-20/banner.jpg",width:650,mdxType:"Banner"}," ","Photo by",(0,i.kt)("a",{href:"https://unsplash.com/photos/hRXIKdxoaPo"},"Vanna Phon")," on"," ",(0,i.kt)("a",{href:"https://unsplash.com"},"Unsplash")," "),(0,i.kt)("p",null,"QuestDB supports ingesting records using InfluxDB line protocol. This means that\nyou can benefit from a simple, lightweight, and convenient message format to add\ndata points to tables. We've further improved support for this feature by adding\nauthentication, so your endpoint is more secure. This post describes how we\nadded this functionality and how to enable it via QuestDB configuration."),(0,i.kt)("h2",{id:"adding-influxdb-line-protocol-support-to-questdb"},"Adding InfluxDB line protocol support to QuestDB"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/reference/api/ilp/overview"},"InfluxDB line protocol")," is popular because\nit is a simple text based format, you simply open a socket and send data points\nline by line. Implementation is easy because encoding is trivial and there is no\nresponse to parse. The protocol can be used over UDP or TCP with minimal\noverhead."),(0,i.kt)("p",null,"This is all great as long as your endpoint can not be accessed by unauthorised\nactors that could send junk to your database. If your endpoint is public, then\nyou could secure it by encapsulating it in a secure transport layer such as\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Transport_Layer_Security"},"TLS"),", adding complexity\nto your infrastructure that needs to be managed. This is something we sought to\navoid. Our goals when implementing authentication were:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use a secure, future proof, authentication method."),(0,i.kt)("li",{parentName:"ul"},"Minimise protocol complexity and transport overhead."),(0,i.kt)("li",{parentName:"ul"},"Configuration solely in QuestDB without the need for storing secret data.")),(0,i.kt)("h2",{id:"adding-authentication-to-influxdb-line-protocol"},"Adding authentication to InfluxDB line protocol"),(0,i.kt)("p",null,"To these ends we decided to provide authentication for the InfluxDB line\nprotocol over TCP with a simple\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Challenge%E2%80%93response_authentication"},"challenge/response"),"\nmechanism, where the challenge is a\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cryptographic_nonce"},"nonce")," and the response a\nsignature.\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Elliptic-curve_cryptography"},"Elliptic curve cryptography"),"\n(ECC curve P-256) with ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SHA-2"},"SHA-256")," was chosen\nfor the signature algorithm, this ensures strong authentication that is\nhopefully future proof. The elliptic curve cryptographic keys have a public and\nsecret component, it is possible to configure QuestDB with just the public part,\nthereby mitigating any risks of storing secret information on the server.\nLanguages such as\n",(0,i.kt)("a",{parentName:"p",href:"/docs/develop/insert-data#influxdb-line-protocol"},"JavaScript and Go")," have\nstandard libraries that implement ECC, the\n",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7517"},"JSON Web Key")," standard can be used to\nstore and distribute the keys in a clear and ubiquitous manner."),(0,i.kt)("p",null,"The authentication challenge/response mechanism was chosen to minimise the\nimpact on the protocol, it works as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"When the client connects it sends its key id to the server."),(0,i.kt)("li",{parentName:"ol"},"The server responds with a\n",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cryptographic_nonce"},"nonce")," in printable\ncharacters."),(0,i.kt)("li",{parentName:"ol"},"The client responds with the ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Base64"},"base64"),"\nencoded signature of the nonce."),(0,i.kt)("li",{parentName:"ol"},"If authentication fails the server will disconnect, if not then the client\ncan revert to sending standard InfluxDB line protocol data points.")),(0,i.kt)("p",null,"We developed this form of authentication in response to users who have QuestDB\ndeployments where a simple form of authentication is required without the\noverheads of full encryption."))}h.isMDXComponent=!0},86010:function(e,t,n){function o(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=o(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=o(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);