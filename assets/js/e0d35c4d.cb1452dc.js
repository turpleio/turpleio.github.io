"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[319],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),f=a,b=p["".concat(l,".").concat(f)]||p[f]||m[f]||o;return r?n.createElement(b,i(i({ref:t},c),{},{components:r})):n.createElement(b,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},28418:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var n=r(83117),a=r(80102),o=(r(67294),r(3905)),i=r(46092),s=["components"],l={title:"QuestDB 6.6.1 - Dynamic Commits",author:"Vlad Ilyushchenko",author_title:"QuestDB Team",author_url:"https://github.com/bluestreak01",author_image_url:"https://avatars.githubusercontent.com/bluestreak01",description:"The detailed story of how QuestDB 6.6.1 increases data freshness",keywords:["engineering","community","timeseries","datafreshness","database","open source"],image:"/img/blog/2022-11-25/banner.png",tags:["timeseries","database","engineering","community","release"]},u={permalink:"/blog/2022/11/25/questdb-6.6.1-dynamic-commits",source:"@site/blog/2022-11-25-questdb-6.6.1-dynamic-commits.md",title:"QuestDB 6.6.1 - Dynamic Commits",description:"The detailed story of how QuestDB 6.6.1 increases data freshness",date:"2022-11-25T00:00:00.000Z",formattedDate:"November 25, 2022",tags:[{label:"timeseries",permalink:"/blog/tags/timeseries"},{label:"database",permalink:"/blog/tags/database"},{label:"engineering",permalink:"/blog/tags/engineering"},{label:"community",permalink:"/blog/tags/community"},{label:"release",permalink:"/blog/tags/release"}],readingTime:4.16,truncated:!0,prevItem:{title:"Listen to Your CPU - Full-table Scans Are Fast",permalink:"/blog/2022/11/30/full-table-scan-are-fast"},nextItem:{title:"SQL Extensions for Time Series Data in QuestDB - Part II",permalink:"/blog/2022/11/23/sql-extensions-time-series-data-questdb-part-ii"}},c=[],m={toc:c};function p(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(i.Z,{alt:"QuestDB 6.6.1 release highlights",height:467,src:"/img/blog/2022-11-25/banner.png",width:650,mdxType:"Banner"}),(0,o.kt)("p",null,"We are excited to announce the release of\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb/releases/tag/6.6.1"},"QuestDB 6.6.1"),", which\nbrings dynamic commits to optimize ingestion throughput and data freshness for\nreads. In this blog post, our CTO, Vlad, shares the story driving the creation\nof the dynamic commits."))}p.isMDXComponent=!0},86010:function(e,t,r){function n(e){var t,r,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(r=n(e[t]))&&(a&&(a+=" "),a+=r);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,r=0,a="";r<arguments.length;)(e=arguments[r++])&&(t=n(e))&&(a&&(a+=" "),a+=t);return a}r.d(t,{Z:function(){return a}})}}]);