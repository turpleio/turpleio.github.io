"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[6645],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return g}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),g=a,f=p["".concat(s,".").concat(g)]||p[g]||m[g]||o;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},82949:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),i=t(46092),c=["components"],s={title:"Things we learned about sums",author:"Tancrede Collard",author_title:"QuestDB Team",author_url:"https://github.com/TheTanc",author_image_url:"https://avatars.githubusercontent.com/TheTanc",description:"What we learned implementing Kahan and Neumaier compensated sum algorithms, benchmark and comparison with Clickhouse.",keywords:["performance","benchmarking","deep-dive","kahan","neumaier","database","simd","clickhouse"],tags:["engineering","benchmark","performance"],image:"/img/blog/2020-05-12/banner.png"},u={permalink:"/blog/2020/05/12/interesting-things-we-learned-about-sums",source:"@site/blog/2020-05-12-interesting-things-we-learned-about-sums.md",title:"Things we learned about sums",description:"What we learned implementing Kahan and Neumaier compensated sum algorithms, benchmark and comparison with Clickhouse.",date:"2020-05-12T00:00:00.000Z",formattedDate:"May 12, 2020",tags:[{label:"engineering",permalink:"/blog/tags/engineering"},{label:"benchmark",permalink:"/blog/tags/benchmark"},{label:"performance",permalink:"/blog/tags/performance"}],readingTime:8.52,truncated:!0,prevItem:{title:"Sending IoT sensor data from Arduino to QuestDB",permalink:"/blog/2020/06/05/iot-on-questdb"},nextItem:{title:"Aggregating billions of rows per second with SIMD",permalink:"/blog/2020/04/02/using-simd-to-aggregate-billions-of-rows-per-second"}},l=[],m={toc:l};function p(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(i.Z,{alt:"Wile E. Coyote and the Road Runner cartoon",height:257,src:"/img/blog/2020-05-12/banner.png",width:655,mdxType:"Banner"}),(0,o.kt)("p",null,"In the world of databases, benchmarking performance has always been the hottest\ntopic. Who is faster for data ingestion and queries? About a month ago we\nannounced a new release with SIMD aggregations on\n",(0,o.kt)("a",{parentName:"p",href:"https://news.ycombinator.com/item?id=22803504"},"HackerNews")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://www.reddit.com/r/programming/comments/fwlk0k/questdb_using_simd_to_aggregate_billions_of/"},"Reddit"),".\nFast. But were those results numerically accurate?"))}p.isMDXComponent=!0},86010:function(e,n,t){function r(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}function a(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(a&&(a+=" "),a+=n);return a}t.d(n,{Z:function(){return a}})}}]);