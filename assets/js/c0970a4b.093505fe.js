"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[4942],{3905:function(t,e,a){a.d(e,{Zo:function(){return o},kt:function(){return N}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},o=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,o=m(t,["components","mdxType","originalType","parentName"]),s=d(a),N=r,u=s["".concat(p,".").concat(N)]||s[N]||k[N]||l;return a?n.createElement(u,i(i({ref:e},o),{},{components:a})):n.createElement(u,i({ref:e},o))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=s;var m={};for(var p in e)hasOwnProperty.call(e,p)&&(m[p]=e[p]);m.originalType=t,m.mdxType="string"==typeof t?t:r,i[1]=m;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},49710:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return m},metadata:function(){return p},toc:function(){return d},default:function(){return k}});var n=a(83117),r=a(80102),l=(a(67294),a(3905)),i=["components"],m={title:"Date and time functions",sidebar_label:"Date and time",description:"Date and time functions reference documentation."},p={unversionedId:"reference/function/date-time",id:"reference/function/date-time",isDocsHomePage:!1,title:"Date and time functions",description:"Date and time functions reference documentation.",source:"@site/docs/reference/function/date-time.md",sourceDirName:"reference/function",slug:"/reference/function/date-time",permalink:"/docs/reference/function/date-time",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/reference/function/date-time.md",version:"current",sidebar_label:"Date and time",frontMatter:{title:"Date and time functions",sidebar_label:"Date and time",description:"Date and time functions reference documentation."},sidebar:"docs",previous:{title:"Conditional functions",permalink:"/docs/reference/function/conditional"},next:{title:"Meta functions",permalink:"/docs/reference/function/meta"}},d=[{value:"systimestamp",id:"systimestamp",children:[]},{value:"sysdate",id:"sysdate",children:[]},{value:"now",id:"now",children:[]},{value:"timestamp_ceil",id:"timestamp_ceil",children:[]},{value:"timestamp_floor",id:"timestamp_floor",children:[]},{value:"to_timestamp",id:"to_timestamp",children:[]},{value:"to_date",id:"to_date",children:[]},{value:"to_str",id:"to_str",children:[]},{value:"to_timezone",id:"to_timezone",children:[]},{value:"to_utc",id:"to_utc",children:[]},{value:"dateadd",id:"dateadd",children:[]},{value:"datediff",id:"datediff",children:[]},{value:"millis",id:"millis",children:[]},{value:"micros",id:"micros",children:[]},{value:"second",id:"second",children:[]},{value:"minute",id:"minute",children:[]},{value:"hour",id:"hour",children:[]},{value:"day",id:"day",children:[]},{value:"month",id:"month",children:[]},{value:"year",id:"year",children:[]},{value:"is_leap_year",id:"is_leap_year",children:[]},{value:"days_in_month",id:"days_in_month",children:[]},{value:"day_of_week",id:"day_of_week",children:[]},{value:"day_of_week_sunday_first",id:"day_of_week_sunday_first",children:[]},{value:"Date and timestamp format",id:"date-and-timestamp-format",children:[{value:"Examples for greedy year format <code>y</code>",id:"examples-for-greedy-year-format-y",children:[]}]}],o={toc:d};function k(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},o,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This page describes the available functions to assist with performing time-based\ncalculations."),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Checking if tables contain a designated timestamp column can be done via the\n",(0,l.kt)("inlineCode",{parentName:"p"},"tables()")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"table_columns()")," functions which are described in the\n",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/function/meta"},"meta functions")," documentation page."))),(0,l.kt)("h2",{id:"systimestamp"},"systimestamp"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"systimestamp()")," - offset from UTC Epoch in microseconds. Calculates\n",(0,l.kt)("inlineCode",{parentName:"p"},"UTC timestamp")," using system's real time clock. The value is affected by\ndiscontinuous jumps in the system time (e.g., if the system administrator\nmanually changes the system time)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"systimestamp()")," does not accept arguments.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Insert current system timestamp"',title:'"Insert',current:!0,system:!0,'timestamp"':!0},"INSERT INTO readings\nVALUES(systimestamp(), 123.5);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"ts"),(0,l.kt)("th",{parentName:"tr",align:"left"},"reading"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-01-02T19:28:48.727516Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"123.5")))),(0,l.kt)("h2",{id:"sysdate"},"sysdate"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"sysdate()")," - returns the timestamp of the host system as a ",(0,l.kt)("inlineCode",{parentName:"p"},"date")," with\n",(0,l.kt)("inlineCode",{parentName:"p"},"millisecond")," precision."),(0,l.kt)("p",null,"Calculates ",(0,l.kt)("inlineCode",{parentName:"p"},"UTC date")," with millisecond precision using system's real time clock.\nThe value is affected by discontinuous jumps in the system time (e.g., if the\nsystem administrator manually changes the system time)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sysdate()")," does not accept arguments.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"date"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Insert current system date along with a value"',title:'"Insert',current:!0,system:!0,date:!0,along:!0,with:!0,a:!0,'value"':!0},"INSERT INTO readings\nVALUES(sysdate(), 123.5);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"sysdate"),(0,l.kt)("th",{parentName:"tr",align:"left"},"reading"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-01-02T19:28:48.727516Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"123.5")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Query based on last minute"',title:'"Query',based:!0,on:!0,last:!0,'minute"':!0},"SELECT * FROM readings\nWHERE date_time > sysdate() - 60000000L;\n")),(0,l.kt)("h2",{id:"now"},"now"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"now()")," - offset from UTC Epoch in microseconds."),(0,l.kt)("p",null,"Calculates ",(0,l.kt)("inlineCode",{parentName:"p"},"UTC timestamp")," using system's real time clock. Unlike\n",(0,l.kt)("inlineCode",{parentName:"p"},"sysdatetime()"),", it does not change within the query execution timeframe and\nshould be used in WHERE clause to filter designated timestamp column relative to\ncurrent time, i.e.:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SELECT now() FROM long_sequence(200)")," will return the same timestamp for all\nrows"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SELECT systimestamp() FROM long_sequence(200)")," will have new timestamp values\nfor each row")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"now()")," does not accept arguments.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Filter records to created within last day"',title:'"Filter',records:!0,to:!0,created:!0,within:!0,last:!0,'day"':!0},"SELECT created, origin FROM telemetry\nWHERE created > dateadd('d', -1, now());\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"created"),(0,l.kt)("th",{parentName:"tr",align:"left"},"origin"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-01T21:51:34.443726Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"1")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Query returns same timestamp in every row"',title:'"Query',returns:!0,same:!0,timestamp:!0,in:!0,every:!0,'row"':!0},"SELECT now() FROM long_sequence(3)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"now"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-01T21:51:34.443726Z")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-01T21:51:34.443726Z")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-01T21:51:34.443726Z")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Query based on last minute"',title:'"Query',based:!0,on:!0,last:!0,'minute"':!0},"SELECT * FROM readings\nWHERE date_time > now() - 60000000L;\n")),(0,l.kt)("h2",{id:"timestamp_ceil"},"timestamp_ceil"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"timestamp_ceil(unit, timestamp)")," - performs a ceiling calculation on a\ntimestamp by given unit."),(0,l.kt)("p",null,"A unit must be provided to specify which granularity to perform rounding."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"timestamp_ceil(unit, timestamp)")," has the following arguments:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"unit")," - may be one of the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"T")," milliseconds"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"s")," seconds"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"m")," minutes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"h")," hours"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"d")," days"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"M")," months"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y")," year")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")," - any timestamp value"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"WITH t AS (SELECT cast('2016-02-10T16:18:22.862145Z' AS timestamp) ts)\nSELECT\n  ts,\n  timestamp_ceil('T', ts) c_milli,\n  timestamp_ceil('s', ts) c_second,\n  timestamp_ceil('m', ts) c_minute,\n  timestamp_ceil('h', ts) c_hour,\n  timestamp_ceil('d', ts) c_day,\n  timestamp_ceil('M', ts) c_month,\n  timestamp_ceil('y', ts) c_year\n  FROM t\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"ts"),(0,l.kt)("th",{parentName:"tr",align:"left"},"c_milli"),(0,l.kt)("th",{parentName:"tr",align:"left"},"c_second"),(0,l.kt)("th",{parentName:"tr",align:"left"},"c_minute"),(0,l.kt)("th",{parentName:"tr",align:"left"},"c_hour"),(0,l.kt)("th",{parentName:"tr",align:"left"},"c_day"),(0,l.kt)("th",{parentName:"tr",align:"left"},"c_month"),(0,l.kt)("th",{parentName:"tr",align:"left"},"c_year"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:18:22.862145Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:18:22.863000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:18:23.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:19:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T17:00:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-11T00:00:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-03-01T00:00:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},'2017-01-01T00:00:00.000000Z"')))),(0,l.kt)("h2",{id:"timestamp_floor"},"timestamp_floor"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"timestamp_floor(unit, timestamp)")," - performs a floor calculation on a timestamp\nby given unit."),(0,l.kt)("p",null,"A unit must be provided to specify which granularity to perform rounding."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"timestamp_floor(unit, timestamp)")," has the following arguments:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"unit")," - may be one of the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"T")," milliseconds"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"s")," seconds"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"m")," minutes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"h")," hours"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"d")," days"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"M")," months"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y")," year")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")," - any timestamp value"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"WITH t AS (SELECT cast('2016-02-10T16:18:22.862145Z' AS timestamp) ts)\nSELECT\n  ts,\n  timestamp_floor('T', ts) f_milli,\n  timestamp_floor('s', ts) f_second,\n  timestamp_floor('m', ts) f_minute,\n  timestamp_floor('h', ts) f_hour,\n  timestamp_floor('d', ts) f_day,\n  timestamp_floor('M', ts) f_month,\n  timestamp_floor('y', ts) f_year\n  FROM t\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"ts"),(0,l.kt)("th",{parentName:"tr",align:"left"},"f_milli"),(0,l.kt)("th",{parentName:"tr",align:"left"},"f_second"),(0,l.kt)("th",{parentName:"tr",align:"left"},"f_minute"),(0,l.kt)("th",{parentName:"tr",align:"left"},"f_hour"),(0,l.kt)("th",{parentName:"tr",align:"left"},"f_day"),(0,l.kt)("th",{parentName:"tr",align:"left"},"f_month"),(0,l.kt)("th",{parentName:"tr",align:"left"},"f_year"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:18:22.862145Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:18:22.862000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:18:22.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:18:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T16:00:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-10T00:00:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-02-01T00:00:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2016-01-01T00:00:00.000000Z")))),(0,l.kt)("h2",{id:"to_timestamp"},"to_timestamp"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"to_timestamp(string, format)")," - converts ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")," by using the\nsupplied ",(0,l.kt)("inlineCode",{parentName:"p"},"format")," to extract the value with microsecond precision."),(0,l.kt)("p",null,"When the ",(0,l.kt)("inlineCode",{parentName:"p"},"format")," definition does not match the ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," input, the result will\nbe ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("p",null,"For more information about recognized timestamp formats, see the\n",(0,l.kt)("a",{parentName:"p",href:"#date-and-timestamp-format"},"date and timestamp format section"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string")," is any string that represents a date and/or time."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"format")," is a string that describes the timestamp format in which ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," is\nexpressed.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp"),". QuestDB provides ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")," with microsecond\nresolution. Input strings with nanosecond precision will be parsed but lose the\nprecision."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Pattern matching with microsecond precision"',title:'"Pattern',matching:!0,with:!0,microsecond:!0,'precision"':!0},"SELECT to_timestamp('2020-03-01:15:43:21.127329', 'yyyy-MM-dd:HH:mm:ss.SSSUUU')\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_timestamp"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-03-01T15:43:21.127329Z")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Precision loss when pattern matching with nanosecond precision"',title:'"Precision',loss:!0,when:!0,pattern:!0,matching:!0,with:!0,nanosecond:!0,'precision"':!0},"SELECT to_timestamp('2020-03-01:15:43:00.000000001Z', 'yyyy-MM-dd:HH:mm:ss.SSSUUUNNNZ')\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_timestamp"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-03-01T15:43:00.000000Z")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="String does not match format"',title:'"String',does:!0,not:!0,match:!0,'format"':!0},"SELECT to_timestamp('2020-03-01:15:43:21', 'yyyy')\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_timestamp"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"null")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using with INSERT"',title:'"Using',with:!0,'INSERT"':!0},"INSERT INTO measurements\nvalues(to_timestamp('2019-12-12T12:15', 'yyyy-MM-ddTHH:mm'), 123.5);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"timestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2019-12-12T12:15:00.000000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"123.5")))),(0,l.kt)("p",null,"Note that conversion of ISO timestamp format is optional. QuestDB automatically\nconverts ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")," if it is a partial or full form of\n",(0,l.kt)("inlineCode",{parentName:"p"},"yyyy-MM-ddTHH:mm:ss.SSSUUU")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"yyyy-MM-dd HH:mm:ss.SSSUUU")," with a valid time\noffset, ",(0,l.kt)("inlineCode",{parentName:"p"},"+01:00")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"Z"),". See more examples in\n",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/sql/where#native-timestamp-format"},"Native timestamp"),"\nformat](/docs/reference/sql/where#native-timestamp-format)."),(0,l.kt)("h2",{id:"to_date"},"to_date"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"to_date(string, format)")," - converts string to ",(0,l.kt)("inlineCode",{parentName:"p"},"date")," by using the supplied\n",(0,l.kt)("inlineCode",{parentName:"p"},"format")," to extract the value."),(0,l.kt)("p",null,"Will convert a ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"date")," using the format definition passed as an\nargument. When the ",(0,l.kt)("inlineCode",{parentName:"p"},"format")," definition does not match the ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," input, the\nresult will be ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("p",null,"For more information about recognized timestamp formats, see the\n",(0,l.kt)("a",{parentName:"p",href:"#date-and-timestamp-format"},"date and timestamp format section"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string")," is any string that represents a date and/or time."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"format")," is a string that describes the ",(0,l.kt)("inlineCode",{parentName:"li"},"date format")," in which ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," is\nexpressed.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"date")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="string matches format"',title:'"string',matches:!0,'format"':!0},"SELECT to_date('2020-03-01:15:43:21', 'yyyy-MM-dd:HH:mm:ss')\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_date"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-03-01T15:43:21.000Z")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="string does not match format"',title:'"string',does:!0,not:!0,match:!0,'format"':!0},"SELECT to_date('2020-03-01:15:43:21', 'yyyy')\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_date"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"null")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using with INSERT"',title:'"Using',with:!0,'INSERT"':!0},"INSERT INTO measurements\nvalues(to_date('2019-12-12T12:15', 'yyyy-MM-ddTHH:mm'), 123.5);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"date"),(0,l.kt)("th",{parentName:"tr",align:"left"},"value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2019-12-12T12:15:00.000Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"123.5")))),(0,l.kt)("h2",{id:"to_str"},"to_str"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"to_str(value, format)")," - converts date or timestamp value to a string in the\nspecified format"),(0,l.kt)("p",null,"Will convert a date or timestamp value to a string using the format definition\npassed as an argument. When elements in the ",(0,l.kt)("inlineCode",{parentName:"p"},"format")," definition are\nunrecognized, they will be passed-through as string."),(0,l.kt)("p",null,"For more information about recognized timestamp formats, see the\n",(0,l.kt)("a",{parentName:"p",href:"#date-and-timestamp-format"},"date and timestamp format section"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"date")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"format")," is a timestamp format.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Basic example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_str(systimestamp(), 'yyyy-MM-dd') FROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_str"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-03-04")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"With unrecognized timestamp definition")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_str(systimestamp(), 'yyyy-MM-dd gooD DAY 123') FROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_str"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-03-04 gooD DAY 123")))),(0,l.kt)("h2",{id:"to_timezone"},"to_timezone"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"to_timezone(timestamp, timezone)")," - converts a timestamp value to a specified\ntimezone. For more information on the time zone database used for this function,\nsee the\n",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/working-with-timestamps-timezones"},"QuestDB time zone database documentation"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," as Unix timestamp or string equivalent"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezone")," may be ",(0,l.kt)("inlineCode",{parentName:"li"},"Country/City")," tz database name, time zone abbreviation such\nas ",(0,l.kt)("inlineCode",{parentName:"li"},"PST")," or in UTC offset in string format.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unix UTC timestamp in microseconds to ",(0,l.kt)("inlineCode",{parentName:"li"},"Europe/Berlin"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_timezone(1623167145000000, 'Europe/Berlin')\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_timezone"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-06-08T17:45:45.000000Z")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unix UTC timestamp in microseconds to PST by UTC offset")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_timezone(1623167145000000, '-08:00')\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_timezone"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-06-08T07:45:45.000000Z")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Timestamp as string to ",(0,l.kt)("inlineCode",{parentName:"li"},"PST"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_timezone('2021-06-08T13:45:45.000000Z', 'PST')\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_timezone"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-06-08T06:45:45.000000Z")))),(0,l.kt)("h2",{id:"to_utc"},"to_utc"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"to_utc(timestamp, timezone)")," - converts a timestamp by specified timezone to\nUTC. May be provided a timezone in string format or a UTC offset in hours and\nminutes. For more information on the time zone database used for this function,\nsee the\n",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/working-with-timestamps-timezones"},"QuestDB time zone database documentation"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," as Unix timestamp or string equivalent"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezone")," may be ",(0,l.kt)("inlineCode",{parentName:"li"},"Country/City")," tz database name, time zone abbreviation such\nas ",(0,l.kt)("inlineCode",{parentName:"li"},"PST")," or in UTC offset in string format.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Convert a Unix timestamp in microseconds from the ",(0,l.kt)("inlineCode",{parentName:"li"},"Europe/Berlin")," timezone to\nUTC")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_utc(1623167145000000, 'Europe/Berlin')\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_utc"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-06-08T13:45:45.000000Z")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unix timestamp in microseconds from PST to UTC by UTC offset")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_utc(1623167145000000, '-08:00')\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_utc"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-06-08T23:45:45.000000Z")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Timestamp as string in ",(0,l.kt)("inlineCode",{parentName:"li"},"PST")," to UTC")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_utc('2021-06-08T13:45:45.000000Z', 'PST')\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"to_utc"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-06-08T20:45:45.000000Z")))),(0,l.kt)("h2",{id:"dateadd"},"dateadd"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"dateadd(period, n, startDate)")," - adds ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," ",(0,l.kt)("inlineCode",{parentName:"p"},"period")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"startDate"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"period")," is a char. Period to be added. Available periods are ",(0,l.kt)("inlineCode",{parentName:"li"},"s"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"m"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"h"),",\n",(0,l.kt)("inlineCode",{parentName:"li"},"d"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"M"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"y"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"n")," is an int. Number of periods to add."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"startDate")," is a timestamp or date. Timestamp to add the periods to.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"timestamp")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Adding hours"',title:'"Adding','hours"':!0},"SELECT systimestamp(), dateadd('h', 2, systimestamp())\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"systimestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"dateadd"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-04-17T00:30:51.380499Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-04-17T02:30:51.380499Z")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Adding days"',title:'"Adding','days"':!0},"SELECT systimestamp(), dateadd('d', 2, systimestamp())\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"systimestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"dateadd"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-04-17T00:30:51.380499Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-04-19T00:30:51.380499Z")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Adding months"',title:'"Adding','months"':!0},"SELECT systimestamp(), dateadd('M', 2, systimestamp())\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"systimestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"dateadd"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-04-17T00:30:51.380499Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2020-06-17T00:30:51.380499Z")))),(0,l.kt)("h2",{id:"datediff"},"datediff"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"datediff(period, date1, date2)")," - returns the absolute number of ",(0,l.kt)("inlineCode",{parentName:"p"},"period"),"\nbetween ",(0,l.kt)("inlineCode",{parentName:"p"},"date1")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"date2"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"period")," is a char. Period to be added. Available periods are ",(0,l.kt)("inlineCode",{parentName:"li"},"s"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"m"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"h"),",\n",(0,l.kt)("inlineCode",{parentName:"li"},"d"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"M"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"y"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"date1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"date2")," are date or timestamp. Dates to compare")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Difference in days"',title:'"Difference',in:!0,'days"':!0},"SELECT datediff(\n    'd',\n    to_timestamp('2020-01-23','yyyy-MM-dd'),\n    to_timestamp('2020-01-27','yyyy-MM-dd'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"datediff"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"4")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Difference in months"',title:'"Difference',in:!0,'months"':!0},"SELECT datediff(\n    'M',\n    to_timestamp('2020-01-23','yyyy-MM-dd'),\n    to_timestamp('2020-02-24','yyyy-MM-dd'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"datediff"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1")))),(0,l.kt)("h2",{id:"millis"},"millis"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"millis(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"millis")," of the second for a given date or\ntimestamp from ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"999")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Millis of the second"',title:'"Millis',of:!0,the:!0,'second"':!0},"SELECT millis(\n    to_timestamp('2020-03-01:15:43:21.123456', 'yyyy-MM-dd:HH:mm:ss.SSSUUU'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"millis"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"123")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",3:!0,className:"language-questdb-sql",metastring:'title="Parsing 3 digits when no unit is added after S"',title:'"Parsing',digits:!0,when:!0,no:!0,unit:!0,is:!0,added:!0,after:!0,'S"':!0},"SELECT millis(to_timestamp('2020-03-01:15:43:21.123', 'yyyy-MM-dd:HH:mm:ss.S'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"millis"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"123")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT millis(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"second"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"0"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6548")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"..."),(0,l.kt)("td",{parentName:"tr",align:"left"},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"998"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"999"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"micros"},"micros"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"micros(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"micros")," of the millisecond for a given date or\ntimestamp from ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"999")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Micros of the second"',title:'"Micros',of:!0,the:!0,'second"':!0},"SELECT micros(to_timestamp('2020-03-01:15:43:21.123456', 'yyyy-MM-dd:HH:mm:ss.SSSUUU'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"millis"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"456")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",3:!0,className:"language-questdb-sql",metastring:'title="Parsing 3 digits when no unit is added after U"',title:'"Parsing',digits:!0,when:!0,no:!0,unit:!0,is:!0,added:!0,after:!0,'U"':!0},"SELECT micros(to_timestamp('2020-03-01:15:43:21.123456', 'yyyy-MM-dd:HH:mm:ss.SSSU'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"millis"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"456")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT micros(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"second"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"0"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6548")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"..."),(0,l.kt)("td",{parentName:"tr",align:"left"},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"998"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"999"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"second"},"second"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"second(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"second")," of the minute for a given date or\ntimestamp from ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"59")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Second of the minute"',title:'"Second',of:!0,the:!0,'minute"':!0},"SELECT second(to_timestamp('2020-03-01:15:43:21', 'yyyy-MM-dd:HH:mm:ss'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"second"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"43")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT second(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"second"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"0"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6548")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"..."),(0,l.kt)("td",{parentName:"tr",align:"left"},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"58"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"59"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"minute"},"minute"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"minute(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"minute")," of the hour for a given date or timestamp\nfrom ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"59")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Minute of the hour"',title:'"Minute',of:!0,the:!0,'hour"':!0},"SELECT minute(to_timestamp('2020-03-01:15:43:21', 'yyyy-MM-dd:HH:mm:ss'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"minute"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"43")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT minute(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"minute"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"0"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6548")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"..."),(0,l.kt)("td",{parentName:"tr",align:"left"},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"58"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"59"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"hour"},"hour"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"hour(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"hour")," of day for a given date or timestamp from ",(0,l.kt)("inlineCode",{parentName:"p"},"0"),"\nto ",(0,l.kt)("inlineCode",{parentName:"p"},"23")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Hour of the day"',title:'"Hour',of:!0,the:!0,'day"':!0},"SELECT hour(to_timestamp('2020-03-01:15:43:21', 'yyyy-MM-dd:HH:mm:ss'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"hour"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"12")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT hour(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"hour"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"0"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6548")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"..."),(0,l.kt)("td",{parentName:"tr",align:"left"},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"22"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"23"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"day"},"day"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"day(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"day")," of month for a given date or timestamp from ",(0,l.kt)("inlineCode",{parentName:"p"},"1"),"\nto ",(0,l.kt)("inlineCode",{parentName:"p"},"31"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Day of the month"',title:'"Day',of:!0,the:!0,'month"':!0},"SELECT day(to_timestamp('2020-03-01:15:43:21', 'yyyy-MM-dd:HH:mm:ss'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"day"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"01")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT day(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"day"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6548")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"..."),(0,l.kt)("td",{parentName:"tr",align:"left"},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"30"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"31"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"month"},"month"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"month(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"month")," of year for a given date or timestamp from\n",(0,l.kt)("inlineCode",{parentName:"p"},"1")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"12")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Month of the year"',title:'"Month',of:!0,the:!0,'year"':!0},"SELECT month(to_timestamp('2020-03-01:15:43:21', 'yyyy-MM-dd:HH:mm:ss'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"month"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"03")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT month(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"month"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6548")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"..."),(0,l.kt)("td",{parentName:"tr",align:"left"},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"11"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"12"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"year"},"year"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"year(value)")," - returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"year")," for a given date or timestamp"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Year"',title:'"Year"'},"SELECT year(to_timestamp('2020-03-01:15:43:21', 'yyyy-MM-dd:HH:mm:ss'))\nFROM long_sequence(1);\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"year"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Using in an aggregation"',title:'"Using',in:!0,an:!0,'aggregation"':!0},"SELECT month(ts), count() FROM transactions;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"year"),(0,l.kt)("th",{parentName:"tr",align:"left"},"count"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2015"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2323")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2016"),(0,l.kt)("td",{parentName:"tr",align:"left"},"9876")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2017"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2567")))),(0,l.kt)("h2",{id:"is_leap_year"},"is_leap_year"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"is_leap_year(value)")," - returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the ",(0,l.kt)("inlineCode",{parentName:"p"},"year")," of ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," is a leap year,\n",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT year(ts), is_leap_year(ts) FROM myTable;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"year"),(0,l.kt)("th",{parentName:"tr",align:"left"},"is_leap_year"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2020"),(0,l.kt)("td",{parentName:"tr",align:"left"},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021"),(0,l.kt)("td",{parentName:"tr",align:"left"},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2022"),(0,l.kt)("td",{parentName:"tr",align:"left"},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2023"),(0,l.kt)("td",{parentName:"tr",align:"left"},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2024"),(0,l.kt)("td",{parentName:"tr",align:"left"},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2025"),(0,l.kt)("td",{parentName:"tr",align:"left"},"false")))),(0,l.kt)("h2",{id:"days_in_month"},"days_in_month"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"days_in_month(value)")," - returns the number of days in a month from a provided\ntimestamp or date."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT month(ts), days_in_month(ts) FROM myTable;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"month"),(0,l.kt)("th",{parentName:"tr",align:"left"},"days_in_month"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"4"),(0,l.kt)("td",{parentName:"tr",align:"left"},"30")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"5"),(0,l.kt)("td",{parentName:"tr",align:"left"},"31")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"30")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"7"),(0,l.kt)("td",{parentName:"tr",align:"left"},"31")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"8"),(0,l.kt)("td",{parentName:"tr",align:"left"},"31")))),(0,l.kt)("h2",{id:"day_of_week"},"day_of_week"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"day_of_week(value)")," - returns the day number in a week from ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," (Monday) to ",(0,l.kt)("inlineCode",{parentName:"p"},"7"),"\n(Sunday)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_str(ts,'EE'),day_of_week(ts) FROM myTable;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"day"),(0,l.kt)("th",{parentName:"tr",align:"left"},"day_of_week"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Monday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Tuesday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Wednesday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Thursday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Friday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Saturday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Sunday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"7")))),(0,l.kt)("h2",{id:"day_of_week_sunday_first"},"day_of_week_sunday_first"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"day_of_week_sunday_first(value)")," - returns the day number in a week from ",(0,l.kt)("inlineCode",{parentName:"p"},"1"),"\n(Sunday) to ",(0,l.kt)("inlineCode",{parentName:"p"},"7")," (Saturday)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," is any ",(0,l.kt)("inlineCode",{parentName:"li"},"timestamp")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"date"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"Return value type is ",(0,l.kt)("inlineCode",{parentName:"p"},"int")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT to_str(ts,'EE'),day_of_week_sunday_first(ts) FROM myTable;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"day"),(0,l.kt)("th",{parentName:"tr",align:"left"},"day_of_week_sunday_first"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Monday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Tuesday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Wednesday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Thursday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Friday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Saturday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Sunday"),(0,l.kt)("td",{parentName:"tr",align:"left"},"1")))),(0,l.kt)("h2",{id:"date-and-timestamp-format"},"Date and timestamp format"),(0,l.kt)("p",null,"The date and timestamp format is formed by units and arbitrary text. A unit is a\ncombination of letters representing a date or time component, as defined by the\ntable below. The letters used to form a unit are case-sensitive."),(0,l.kt)("p",null,"See\n",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/working-with-timestamps-timezones/#timestamps-in-questdb"},"Timestamps in QuestDB"),"\nfor more examples of how the units are used to parse inputs."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Unit"),(0,l.kt)("th",{parentName:"tr",align:null},"Date or Time Component"),(0,l.kt)("th",{parentName:"tr",align:null},"Presentation"),(0,l.kt)("th",{parentName:"tr",align:null},"Examples"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"G")),(0,l.kt)("td",{parentName:"tr",align:null},"Era designator"),(0,l.kt)("td",{parentName:"tr",align:null},"Text"),(0,l.kt)("td",{parentName:"tr",align:null},"AD")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"y")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"y")," single digit or greedy year, depending on the input digit number"),(0,l.kt)("td",{parentName:"tr",align:null},"Year"),(0,l.kt)("td",{parentName:"tr",align:null},"1996; 96; 999; 3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yy")),(0,l.kt)("td",{parentName:"tr",align:null},"Two digit year of the current century"),(0,l.kt)("td",{parentName:"tr",align:null},"Year"),(0,l.kt)("td",{parentName:"tr",align:null},"96 (interpreted as 2096)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yyy")),(0,l.kt)("td",{parentName:"tr",align:null},"Three-digit year"),(0,l.kt)("td",{parentName:"tr",align:null},"Year"),(0,l.kt)("td",{parentName:"tr",align:null},"999")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yyyy")),(0,l.kt)("td",{parentName:"tr",align:null},"Four-digit year"),(0,l.kt)("td",{parentName:"tr",align:null},"Year"),(0,l.kt)("td",{parentName:"tr",align:null},"1996")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"M")),(0,l.kt)("td",{parentName:"tr",align:null},"Month in year"),(0,l.kt)("td",{parentName:"tr",align:null},"Month"),(0,l.kt)("td",{parentName:"tr",align:null},"July; Jul; 07")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"w")),(0,l.kt)("td",{parentName:"tr",align:null},"Week in year"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"27")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ww")),(0,l.kt)("td",{parentName:"tr",align:null},"ISO week of year"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"D")),(0,l.kt)("td",{parentName:"tr",align:null},"Day in year"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"189")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"d")),(0,l.kt)("td",{parentName:"tr",align:null},"Day in month"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:null},"Day of week in month"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"E")),(0,l.kt)("td",{parentName:"tr",align:null},"Day name in week"),(0,l.kt)("td",{parentName:"tr",align:null},"Text"),(0,l.kt)("td",{parentName:"tr",align:null},"Tuesday; Tue")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"u")),(0,l.kt)("td",{parentName:"tr",align:null},"Day number of week (1 = Monday, ..., 7 = Sunday)"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"a")),(0,l.kt)("td",{parentName:"tr",align:null},"Am/pm marker"),(0,l.kt)("td",{parentName:"tr",align:null},"Text"),(0,l.kt)("td",{parentName:"tr",align:null},"PM")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"H")),(0,l.kt)("td",{parentName:"tr",align:null},"Hour in day (0-23)"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"k")),(0,l.kt)("td",{parentName:"tr",align:null},"Hour in day (1-24)"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"24")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"K")),(0,l.kt)("td",{parentName:"tr",align:null},"Hour in am/pm (0-11)"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"h")),(0,l.kt)("td",{parentName:"tr",align:null},"Hour in am/pm (1-12)"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"m")),(0,l.kt)("td",{parentName:"tr",align:null},"Minute in hour"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"30")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"s")),(0,l.kt)("td",{parentName:"tr",align:null},"Second in minute"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"55")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SSS")),(0,l.kt)("td",{parentName:"tr",align:null},"3-digit millisecond"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"978")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"S")),(0,l.kt)("td",{parentName:"tr",align:null},"Millisecond up to 3 digits: ",(0,l.kt)("inlineCode",{parentName:"td"},"S")," parses 1 digit when followed by another ",(0,l.kt)("inlineCode",{parentName:"td"},"unit"),". Otherwise, it parses 3 digits."),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"900")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"z")),(0,l.kt)("td",{parentName:"tr",align:null},"Time zone"),(0,l.kt)("td",{parentName:"tr",align:null},"General time zone"),(0,l.kt)("td",{parentName:"tr",align:null},"Pacific Standard Time; PST; GMT-08:00")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Z")),(0,l.kt)("td",{parentName:"tr",align:null},"Time zone"),(0,l.kt)("td",{parentName:"tr",align:null},"RFC 822 time zone"),(0,l.kt)("td",{parentName:"tr",align:null},"-0800")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"X")),(0,l.kt)("td",{parentName:"tr",align:null},"Time zone"),(0,l.kt)("td",{parentName:"tr",align:null},"ISO 8601 time zone"),(0,l.kt)("td",{parentName:"tr",align:null},"-08; -0800; -08:00")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"UUU")),(0,l.kt)("td",{parentName:"tr",align:null},"3-digit microsecond"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"698")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"U")),(0,l.kt)("td",{parentName:"tr",align:null},"Microsecond up to 3 digits: ",(0,l.kt)("inlineCode",{parentName:"td"},"U")," parses 1 digit when followed by another ",(0,l.kt)("inlineCode",{parentName:"td"},"unit"),". Otherwise, it parses 3 digits."),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"600")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"U+")),(0,l.kt)("td",{parentName:"tr",align:null},"6-digit microsecond"),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"600")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"N")),(0,l.kt)("td",{parentName:"tr",align:null},"Nanosecond. QuestDB provides microsecond resolution so the parsed nanosecond will be truncated."),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A (truncated)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"N+")),(0,l.kt)("td",{parentName:"tr",align:null},"9-digit nanosecond. QuestDB provides microsecond resolution so the parsed nanosecond will be truncated."),(0,l.kt)("td",{parentName:"tr",align:null},"Number"),(0,l.kt)("td",{parentName:"tr",align:null},"N/A (truncated)")))),(0,l.kt)("h3",{id:"examples-for-greedy-year-format-y"},"Examples for greedy year format ",(0,l.kt)("inlineCode",{parentName:"h3"},"y")),(0,l.kt)("p",null,"The interpretation of ",(0,l.kt)("inlineCode",{parentName:"p"},"y")," depends on the input digit number:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If the input year is a two-digit number, the output timestamp assumes the\ncurrent century."),(0,l.kt)("li",{parentName:"ul"},"Otherwise, the number is interpreted as it is.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Input year"),(0,l.kt)("th",{parentName:"tr",align:null},"Timestamp value interpreted by ",(0,l.kt)("inlineCode",{parentName:"th"},"y-M")),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"5-03")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0005-03-01T00:00:00.000000Z")),(0,l.kt)("td",{parentName:"tr",align:null},"Greedily parsing the number as it is")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"05-03")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"2005-03-01T00:00:00.000000Z")),(0,l.kt)("td",{parentName:"tr",align:null},"Greedily parsing the number assuming current century")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"005-03")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0005-03-01T00:00:00.000000Z")),(0,l.kt)("td",{parentName:"tr",align:null},"Greedily parsing the number as it is")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0005-03")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0005-03-01T00:00:00.000000Z")),(0,l.kt)("td",{parentName:"tr",align:null},"Greedily parsing the number as it is")))))}k.isMDXComponent=!0}}]);