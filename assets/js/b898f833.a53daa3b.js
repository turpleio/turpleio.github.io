"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[3391],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},24973:function(e,t,n){n.d(t,{Z:function(){return d},I:function(){return c}});var r=n(67294),a=/{\w+}/g,o="{}";function i(e,t){var n=[],i=e.replace(a,(function(e){var a=e.substr(1,e.length-2),i=null==t?void 0:t[a];if(void 0!==i){var l=r.isValidElement(i)?i:String(i);return n.push(l),o}return e}));return 0===n.length?e:n.every((function(e){return"string"==typeof e}))?i.split(o).reduce((function(e,t,r){var a;return e.concat(t).concat(null!==(a=n[r])&&void 0!==a?a:"")}),""):i.split(o).reduce((function(e,t,a){return[].concat(e,[r.createElement(r.Fragment,{key:a},t,n[a])])}),[])}function l(e){return i(e.children,e.values)}var s=n(57529);function u(e){var t,n=e.id,r=e.message;return null!==(t=s[null!=n?n:r])&&void 0!==t?t:r}function c(e,t){var n,r=e.message;return i(null!==(n=u({message:r,id:e.id}))&&void 0!==n?n:r,t)}function d(e){var t,n=e.children,a=e.id,o=e.values,i=null!==(t=u({message:n,id:a}))&&void 0!==t?t:n;return r.createElement(l,{values:o},i)}},58215:function(e,t,n){var r=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},41395:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(67294),a=n(80944),o=n(86010),i="tabItem_vU9c",l="tabItemActive_cw6a";var s=37,u=39;var c=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,d=e.values,p=e.groupId,m=e.className,k=(0,a.Z)(),g=k.tabGroupChoices,h=k.setTabGroupChoices,f=(0,r.useState)(c),v=f[0],b=f[1],N=r.Children.toArray(e.children),w=[];if(null!=p){var y=g[p];null!=y&&y!==v&&d.some((function(e){return e.value===y}))&&b(y)}var D=function(e){var t=e.currentTarget,n=w.indexOf(t),r=d[n].value;b(r),null!=p&&(h(p,r),setTimeout((function(){var e,n,r,a,o,i,s,u;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,o=e.right,i=window,s=i.innerHeight,u=i.innerWidth,n>=0&&o<=u&&a<=s&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},C=function(e){var t,n;switch(e.keyCode){case u:var r=w.indexOf(e.target)+1;n=w[r]||w[0];break;case s:var a=w.indexOf(e.target)-1;n=w[a]||w[w.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},m)},d.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,o.Z)("tabs__item",i,{"tabs__item--active":v===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:C,onFocus:D,onClick:D},n)}))),t?(0,r.cloneElement)(N.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},82924:function(e,t,n){var r=n(67294).createContext(void 0);t.Z=r},79443:function(e,t,n){var r=(0,n(67294).createContext)(void 0);t.Z=r},80944:function(e,t,n){var r=n(67294),a=n(79443);t.Z=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},12514:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},metadata:function(){return p},toc:function(){return m},default:function(){return g}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=n(24966),l=n(99226),s=n(41395),u=n(58215),c=["components"],d={title:"Get started with QuestDB via Docker",sidebar_label:"Docker",description:"Guide showing how to use QuestDB with Docker. This also covers how to import data as well as persistence."},p={unversionedId:"get-started/docker",id:"get-started/docker",isDocsHomePage:!1,title:"Get started with QuestDB via Docker",description:"Guide showing how to use QuestDB with Docker. This also covers how to import data as well as persistence.",source:"@site/docs/get-started/docker.md",sourceDirName:"get-started",slug:"/get-started/docker",permalink:"/docs/get-started/docker",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/get-started/docker.md",version:"current",sidebar_label:"Docker",frontMatter:{title:"Get started with QuestDB via Docker",sidebar_label:"Docker",description:"Guide showing how to use QuestDB with Docker. This also covers how to import data as well as persistence."},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Get started with QuestDB from the binaries",permalink:"/docs/get-started/binaries"}},m=[{value:"Install Docker",id:"install-docker",children:[]},{value:"QuestDB image",id:"questdb-image",children:[{value:"Options",id:"options",children:[]}]},{value:"Container status",id:"container-status",children:[]},{value:"Importing data and sending queries",id:"importing-data-and-sending-queries",children:[]},{value:"Data persistence",id:"data-persistence",children:[{value:"Mounting a volume",id:"mounting-a-volume",children:[]},{value:"Upgrade QuestDB version",id:"upgrade-questdb-version",children:[]},{value:"Writing logs to disk",id:"writing-logs-to-disk",children:[]},{value:"Restart an existing container",id:"restart-an-existing-container",children:[]}]}],k={toc:m};function g(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"QuestDB has images for both Linux/macOS and Windows on\n",(0,o.kt)("a",{parentName:"p",href:"https://"},"Docker Hub"),"."),(0,o.kt)("h2",{id:"install-docker"},"Install Docker"),(0,o.kt)("p",null,"Before we start, you will need to install Docker. You can find guides for your\nplatform on the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"official documentation"),"."),(0,o.kt)("h2",{id:"questdb-image"},"QuestDB image"),(0,o.kt)("p",null,"Once Docker is installed, you will need to pull QuestDB's image from\n",(0,o.kt)("a",{parentName:"p",href:"https://"},"Docker Hub")," and create a container. You can do both in one\ncommand using ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run"),":"),(0,o.kt)(i.Z,{renderText:function(e){return(0,o.kt)(l.Z,{className:"language-shell",title:"Docker",mdxType:"CodeBlock"},'docker run -p 9000:9000 \\\n-p 9009:9009 \\\n-p 8812:8812 \\\n-p 9003:9003 \\\n-v "$(pwd):/var/lib/questdb" \\\nquestdb/questdb:'+e.name)},mdxType:"InterpolateReleaseData"}),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Argument"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"-p")),(0,o.kt)("td",{parentName:"tr",align:null},"Port to publish to the host")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"-v")),(0,o.kt)("td",{parentName:"tr",align:null},"To bind mount a volume.")))),(0,o.kt)("h4",{id:"-p-parameter"},(0,o.kt)("inlineCode",{parentName:"h4"},"-p")," parameter"),(0,o.kt)("p",null,"This parameter will publish a port to the host, you can specify:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p 9000:9000")," - ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/api/rest"},"REST API")," and\n",(0,o.kt)("a",{parentName:"li",href:"/docs/develop/web-console"},"Web Console")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p 9009:9009")," - ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/api/ilp/overview"},"InfluxDB line protocol")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p 8812:8812")," - ",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/api/postgres"},"Postgres wire protocol")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p 9003:9003")," -\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/configuration#minimal-http-server"},"Min health server"))),(0,o.kt)("h4",{id:"-v-volumes"},"-v volumes"),(0,o.kt)("p",null,"The QuestDB ",(0,o.kt)("a",{parentName:"p",href:"/docs/concept/root-directory-structure"},"root_directory")," is in the\nfollowing location:"),(0,o.kt)(s.Z,{defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"macos"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"linux",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"/var/lib/questdb\n"))),(0,o.kt)(u.Z,{value:"macos",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"/var/lib/questdb\n"))),(0,o.kt)(u.Z,{value:"windows",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"C:\\questdb\n")))),(0,o.kt)("h4",{id:"docker-image"},"Docker image"),(0,o.kt)("p",null,"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"questdb/questdb")," points to the latest QuestDB version available on\nDocker. However, it is recommended to define the version used."),(0,o.kt)(i.Z,{renderText:function(e){return(0,o.kt)(l.Z,{className:"language-shell",mdxType:"CodeBlock"},"questdb/questdb:"+e.name)},mdxType:"InterpolateReleaseData"}),(0,o.kt)("h2",{id:"container-status"},"Container status"),(0,o.kt)("p",null,"You can check the status of your container with ",(0,o.kt)("strong",{parentName:"p"},"docker ps"),". It also lists the\nports we published:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker ps\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Result"',title:'"Result"'},'CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES\ndd363939f261        questdb/questdb     "/app/bin/java -m io\u2026"   3 seconds ago       Up 2 seconds        8812/tcp, 9000/tcp   frosty_gauss\n')),(0,o.kt)("h2",{id:"importing-data-and-sending-queries"},"Importing data and sending queries"),(0,o.kt)("p",null,"Now that QuestDB is running, you can start interacting with it:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If you published the port ",(0,o.kt)("inlineCode",{parentName:"li"},"9000"),", you can follow our\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/api/rest"},"REST")," page"),(0,o.kt)("li",{parentName:"ul"},"If you published the port ",(0,o.kt)("inlineCode",{parentName:"li"},"8812"),", follow our\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/api/postgres"},"Postgres")," page"),(0,o.kt)("li",{parentName:"ul"},"If you published the port ",(0,o.kt)("inlineCode",{parentName:"li"},"9009"),", follow our\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/api/ilp/overview"},"InfluxDB")," page")),(0,o.kt)("h2",{id:"data-persistence"},"Data persistence"),(0,o.kt)("h3",{id:"mounting-a-volume"},"Mounting a volume"),(0,o.kt)("p",null,"Volumes can be mounted to the QuestDB Docker container so that data may be\npersisted or server configuration settings may be passed to an instance. The\nfollowing example demonstrated how to mount the current directory to a QuestDB\ncontainer using the ",(0,o.kt)("inlineCode",{parentName:"p"},"-v")," flag in a Docker ",(0,o.kt)("inlineCode",{parentName:"p"},"run")," command:"),(0,o.kt)(i.Z,{renderText:function(e){return(0,o.kt)(l.Z,{className:"language-shell",title:"Mounting a volume",mdxType:"CodeBlock"},'docker run -p 9000:9000 \\\n-p 9009:9009 \\\n-p 8812:8812 \\\n-p 9003:9003 \\\n-v "$(pwd):/var/lib/questdb" \\\nquestdb/questdb:'+e.name)},mdxType:"InterpolateReleaseData"}),(0,o.kt)("p",null,"The current directory will then have data persisted to disk for convenient\nmigration or backups:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Current directory contents"',title:'"Current',directory:!0,'contents"':!0},"\u251c\u2500\u2500 conf\n\u2502   \u2514\u2500\u2500 server.conf\n\u251c\u2500\u2500 db\n\u2514\u2500\u2500 public\n")),(0,o.kt)("p",null,"For details on passing QuestDB server settings to a Docker container, see the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/configuration#docker"},"Docker section")," of the server\nconfiguration documentation."),(0,o.kt)("h3",{id:"upgrade-questdb-version"},"Upgrade QuestDB version"),(0,o.kt)("p",null,"It is possible to upgrade your QuestDB instance on Docker when a volume is\nmounted to maintain data persistence."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Check the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/questdb/questdb/releases"},"release note")," and ensure\nthat necessary ",(0,o.kt)("a",{parentName:"li",href:"/docs/operations/backup/"},"backup")," is completed."),(0,o.kt)("li",{parentName:"ul"},"Upgrading an instance is possible only when the original instance has a volume mounted. Without mounting a volume for the original instance, the following steps create a new instance and data in the old instance cannot be retrieved.")))),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"docker ps")," to copy the container name or ID:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Container status"',title:'"Container','status"':!0},'\n# The existing QuestDB version is 6.5.2:\n\nCONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS                NAMES\ndd363939f261        questdb/questdb:6.5.2     "/app/bin/java -m io\u2026"   3 seconds ago       Up 2 seconds        8812/tcp, 9000/tcp   frosty_gauss\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Stop the instance and then remove the container:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker stop dd363939f261\ndocker rm dd363939f261\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Download the latest QuestDB image:")),(0,o.kt)(i.Z,{renderText:function(e){return(0,o.kt)(l.Z,{className:"language-shell",mdxType:"CodeBlock"},"docker pull questdb/questdb:"+e.name)},mdxType:"InterpolateReleaseData"}),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Start a new container with the new version and the same volume mounted:")),(0,o.kt)(i.Z,{renderText:function(e){return(0,o.kt)(l.Z,{className:"language-shell",mdxType:"CodeBlock"},'docker run -p 8812:8812 -p 9000:9000 -v "$(pwd):/var/lib/questdb" questdb/questdb:'+e.name)},mdxType:"InterpolateReleaseData"}),(0,o.kt)("h3",{id:"writing-logs-to-disk"},"Writing logs to disk"),(0,o.kt)("p",null,"When mounting a volume to a Docker container, a logging configuration file may\nbe provided in the container located at ",(0,o.kt)("inlineCode",{parentName:"p"},"/conf/log.conf"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Current directory contents"',title:'"Current',directory:!0,'contents"':!0},"\u2514\u2500\u2500 conf\n    \u251c\u2500\u2500 log.conf\n    \u2514\u2500\u2500 server.conf\n")),(0,o.kt)("p",null,"For example, a file with the following contents can be created:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="./conf/log.conf"',title:'"./conf/log.conf"'},"# list of configured writers\nwriters=file,stdout,http.min\n\n# file writer\nw.file.class=io.questdb.log.LogFileWriter\nw.file.location=questdb-docker.log\nw.file.level=INFO,ERROR,DEBUG\n\n# stdout\nw.stdout.class=io.questdb.log.LogConsoleWriter\nw.stdout.level=INFO\n\n# min http server, used monitoring\nw.http.min.class=io.questdb.log.LogConsoleWriter\nw.http.min.level=ERROR\nw.http.min.scope=http-min-server\n")),(0,o.kt)("p",null,"The current directory can be mounted:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Mounting the current directory to a QuestDB container"',title:'"Mounting',the:!0,current:!0,directory:!0,to:!0,a:!0,QuestDB:!0,'container"':!0},'docker run -p 9000:9000 \\\n -p 9009:9009 \\\n -p 8812:8812 \\\n -p 9003:9003 \\\n -v "$(pwd):/root/.questdb/" questdb/questdb\n')),(0,o.kt)("p",null,"The container logs will be written to disk using the logging level and file name\nprovided in the ",(0,o.kt)("inlineCode",{parentName:"p"},"conf/log.conf")," file, in this case in ",(0,o.kt)("inlineCode",{parentName:"p"},"./questdb-docker.log"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Current directory tree"',title:'"Current',directory:!0,'tree"':!0},"\u251c\u2500\u2500 conf\n\u2502  \u251c\u2500\u2500 log.conf\n\u2502  \u2514\u2500\u2500 server.conf\n\u251c\u2500\u2500 db\n\u2502  \u251c\u2500\u2500 table1\n\u2502  \u2514\u2500\u2500 table2\n\u251c\u2500\u2500 public\n\u2502  \u251c\u2500\u2500 ui / assets\n\u2502  \u251c\u2500\u2500 ...\n\u2502  \u2514\u2500\u2500 version.txt\n\u2514\u2500\u2500 questdb-docker.log\n")),(0,o.kt)("p",null,"For more information on logging, see the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/configuration#logging"},"configuration reference documentation"),"."),(0,o.kt)("h3",{id:"restart-an-existing-container"},"Restart an existing container"),(0,o.kt)("p",null,"Running the following command will create a new container for the QuestDB image:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -p 9000:9000 \\\n -p 9009:9009 \\\n -p 8812:8812 \\\n -p 9003:9003 \\\n questdb/questdb\n")),(0,o.kt)("p",null,"By giving the container a name with ",(0,o.kt)("inlineCode",{parentName:"p"},"--name container_name"),", we have an easy way\nto refer to the container created by run later on:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -p 9000:9000 \\\n -p 9009:9009 \\\n -p 8812:8812 \\\n -p 9003:9003 \\\n --name docker_questdb \\\n questdb/questdb\n")),(0,o.kt)("p",null,"If we want to re-use this container and its data after it has been stopped, we\ncan use the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# bring the container up\ndocker start docker_questdb\n# shut the container down\ndocker stop docker_questdb\n")),(0,o.kt)("p",null,"Alternatively, users can obtain a running container's ID with 'docker ps' and\nrestart it using the\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/run/#name---name"},"UUID short identifier"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Starting a container by ID"',title:'"Starting',a:!0,container:!0,by:!0,'ID"':!0},"docker start dd363939f261\n")))}g.isMDXComponent=!0},86010:function(e,t,n){function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})}}]);