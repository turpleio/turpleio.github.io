"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[5064],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return c}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=l,h=m["".concat(u,".").concat(c)]||m[c]||d[c]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2188:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var a=n(83117),l=n(80102),r=(n(67294),n(3905)),i=n(46092),o=["components"],u={title:"InfluxDB line protocol on QuestDB",author:"David G. Simmons",author_title:"QuestDB Team",author_url:"https://github.com/davidgs",author_image_url:"https://avatars.githubusercontent.com/davidgs",description:"This tutorial shows an example IoT application using InfluxDB line protocol with QuestDB.",keywords:["timeseries","questdb","influxdb"],tags:["tutorial","questdb","influxdb"],image:"/img/blog/shared/og-influx-line-protocol.png"},s={permalink:"/blog/2020/07/22/influxdb-lp-on-tcp",source:"@site/blog/2020-07-22-influxdb-lp-on-tcp.mdx",title:"InfluxDB line protocol on QuestDB",description:"This tutorial shows an example IoT application using InfluxDB line protocol with QuestDB.",date:"2020-07-22T00:00:00.000Z",formattedDate:"July 22, 2020",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"},{label:"questdb",permalink:"/blog/tags/questdb"},{label:"influxdb",permalink:"/blog/tags/influxdb"}],readingTime:5.605,truncated:!0,prevItem:{title:"QuestDB swag for our community members!",permalink:"/blog/2020/07/24/use-questdb-for-swag"},nextItem:{title:"Demo launch on HackerNews retrospective",permalink:"/blog/2020/07/01/we-put-a-sql-database-on-the-internet"}},p=[{value:"Configuring TCP InfluxDB line protocol listener",id:"configuring-tcp-influxdb-line-protocol-listener",children:[]},{value:"InfluxDB line protocol refresher",id:"influxdb-line-protocol-refresher",children:[{value:"Basic structure",id:"basic-structure",children:[]},{value:"Example ILP",id:"example-ilp",children:[]}]},{value:"Database structure",id:"database-structure",children:[]},{value:"But how did you write that?",id:"but-how-did-you-write-that",children:[]},{value:"Can I do batch writes?",id:"can-i-do-batch-writes",children:[]},{value:"Conclusions",id:"conclusions",children:[]}],d={toc:p};function m(e){var t=e.components,u=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,u,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{alt:"Blue sky surrounded by latice-work",height:433,src:"/img/blog/2020-07-22/banner.jpg",width:650,mdxType:"Banner"},"Photo by"," ",(0,r.kt)("a",{href:"https://unsplash.com/photos/z0l-3cWpKto"}," Ricardo Gomez Angel ")," ","via ",(0,r.kt)("a",{href:"https://unsplash.com"},"Unsplash")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The UDP receiver is deprecated since QuestDB version 6.5.2.\nWe recommend the ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/api/ilp/tcp-receiver/"},"TCP receiver")," introduced by this article."))),(0,r.kt)("p",null,"We've had a UDP version of the InfluxDB Line Protocol (ILP) reader in QuestDB\nfor quite some time, but we've had customers ask for a TCP version of it, so we\ndelivered!"),(0,r.kt)("p",null,"Using and configuring it are relatively simple, so this tutorial will walk you\nthrough the basics of setting it up and using it. For an added bonus, we'll see\nhow to migrate from using InfluxDB to using QuestDB with a single-line\nconfiguration change."),(0,r.kt)("h2",{id:"configuring-tcp-influxdb-line-protocol-listener"},"Configuring TCP InfluxDB line protocol listener"),(0,r.kt)("p",null,"Here's the best part, at least for a basic implementation that you don't need to\nperformance tune at all: It's already set up."),(0,r.kt)("p",null,"That's right, as soon as you start QuestDB, both the UDP and TCP ILP listeners\nstart automatically on port ",(0,r.kt)("inlineCode",{parentName:"p"},"9009"),". Yes, TCP and UDP both use the same port. No,\nthat's not a problem since one is UDP and one is TCP."),(0,r.kt)("p",null,"There are many configuration options you can tune in your ",(0,r.kt)("inlineCode",{parentName:"p"},"conf/server.conf"),"\nfile if you're interested. I won't go through them here, but you can read all\nabout them in our ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/api/ilp/overview"},"docs"),". I hope they are\nrelatively self-explanatory."),(0,r.kt)("h2",{id:"influxdb-line-protocol-refresher"},"InfluxDB line protocol refresher"),(0,r.kt)("p",null,"If you have used ILP before, this should all be review. If you're new to ILP,\nthis will tell you how you should write your data to QuestDB."),(0,r.kt)("h3",{id:"basic-structure"},"Basic structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="ILP syntax"',title:'"ILP','syntax"':!0},"table_name,tagset valueset timestamp\n")),(0,r.kt)("p",null,"Pretty basic. So let's dive into what each element actually is and how to\nstructure a line of ILP for writing."),(0,r.kt)("p",null,"The first element is the ",(0,r.kt)("inlineCode",{parentName:"p"},"table_name")," portion, which tells the ILP writer which\ndatabase table to write values into."),(0,r.kt)("p",null,"Next comes the set of tags you want to use. These are standard ",(0,r.kt)("inlineCode",{parentName:"p"},"key=value"),"\npairs, and you can add as many of them as you want or need. Just separate them\nwith commas."),(0,r.kt)("p",null,"There should only ever be 2 spaces in your line protocol. No more. The first\nspace separates your ",(0,r.kt)("inlineCode",{parentName:"p"},"tags")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"values")," you want to associate with those\n",(0,r.kt)("inlineCode",{parentName:"p"},"tags"),"s. The second space separates the values from the timestamp for those tags\nand values."),(0,r.kt)("p",null,"The values are also ",(0,r.kt)("inlineCode",{parentName:"p"},"key=value")," pairs, and again you can send as many as you\nwant in a line."),(0,r.kt)("p",null,"Finally comes your ",(0,r.kt)("inlineCode",{parentName:"p"},"timestamp")," value, typically in \xb5Seconds."),(0,r.kt)("h3",{id:"example-ilp"},"Example ILP"),(0,r.kt)("p",null,"Let's use an example of writing some environmental data to QuestDB. I have a\nsensor that reads the temperature, atmospheric pressure, humidity, and altitude."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Reading"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Temperature"),(0,r.kt)("td",{parentName:"tr",align:null},"23.180000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Humidity"),(0,r.kt)("td",{parentName:"tr",align:null},"51.982422")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Pressure"),(0,r.kt)("td",{parentName:"tr",align:null},"1002.112061")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Altitude"),(0,r.kt)("td",{parentName:"tr",align:null},"93.146370")))),(0,r.kt)("p",null,"And I want to use the following ",(0,r.kt)("inlineCode",{parentName:"p"},"tag"),"s:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Tag Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Tag Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dev_id"),(0,r.kt)("td",{parentName:"tr",align:null},"THP002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dev_loc"),(0,r.kt)("td",{parentName:"tr",align:null},"Apex")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dev_name"),(0,r.kt)("td",{parentName:"tr",align:null},"BME280")))),(0,r.kt)("p",null,"And my ",(0,r.kt)("inlineCode",{parentName:"p"},"table_name")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"iot")),(0,r.kt)("p",null,"Now I have all the basic elements I need to construct my ILP, which will look\nlike this:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"iot,dev_id=THP002,dev_loc=Apex,dev_name=BME280 temp_c=23.18,altitude=93.10,humidity=52.16,pressure=1002.12")),(0,r.kt)("p",null,"And yes, I rounded those values. But you'll notice that I did not add a\n",(0,r.kt)("inlineCode",{parentName:"p"},"timestamp")," value. In this case, it's because I am sending the values from a\nsmall, embedded sensor device that really doesn't have a great sense of time. By\nsending the ILP without a ",(0,r.kt)("inlineCode",{parentName:"p"},"timestamp")," I'm telling the database itself to add one\nfor me, using the ",(0,r.kt)("inlineCode",{parentName:"p"},"timestamp"),"s arrival time."),(0,r.kt)("h2",{id:"database-structure"},"Database structure"),(0,r.kt)("p",null,"One of the cool features of using the ILP reader (well, QuestDB in general,\nreally) is the ability to do 'Schema on Write'."),(0,r.kt)("p",null,"What that means is that if an ILP message arrives, QuestDB will automatically\ncreate tables and columns to fit the incoming ILP. So if you need to add a ",(0,r.kt)("inlineCode",{parentName:"p"},"tag"),"\nlater, you can add it to the new device's tagset and start writing. The new tag\nwill get added to the schema."),(0,r.kt)("p",null,"If you leave a tag value off, and it exists in the database, it will fill a\n",(0,r.kt)("inlineCode",{parentName:"p"},"null")," value."),(0,r.kt)("p",null,"When I start writing the above ILP to QuestDB, I'll get a table that looks like\nthis:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"dev_id"),(0,r.kt)("th",{parentName:"tr",align:null},"dev_name"),(0,r.kt)("th",{parentName:"tr",align:null},"temp_c"),(0,r.kt)("th",{parentName:"tr",align:null},"humidity"),(0,r.kt)("th",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("th",{parentName:"tr",align:null},"dev_loc"),(0,r.kt)("th",{parentName:"tr",align:null},"altitude"),(0,r.kt)("th",{parentName:"tr",align:null},"pressure"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"THP002"),(0,r.kt)("td",{parentName:"tr",align:null},"BME280"),(0,r.kt)("td",{parentName:"tr",align:null},"26.52"),(0,r.kt)("td",{parentName:"tr",align:null},"51.94"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-07-21T14:54:59.156202Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Apex"),(0,r.kt)("td",{parentName:"tr",align:null},"76.27"),(0,r.kt)("td",{parentName:"tr",align:null},"1004.12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"THP002"),(0,r.kt)("td",{parentName:"tr",align:null},"BME280"),(0,r.kt)("td",{parentName:"tr",align:null},"26.54"),(0,r.kt)("td",{parentName:"tr",align:null},"51.85"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-07-21T14:54:59.157358Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Apex"),(0,r.kt)("td",{parentName:"tr",align:null},"75.97"),(0,r.kt)("td",{parentName:"tr",align:null},"1004.16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"THP002"),(0,r.kt)("td",{parentName:"tr",align:null},"BME280"),(0,r.kt)("td",{parentName:"tr",align:null},"26.56"),(0,r.kt)("td",{parentName:"tr",align:null},"51.83"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-07-21T14:54:59.157389Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Apex"),(0,r.kt)("td",{parentName:"tr",align:null},"75.84"),(0,r.kt)("td",{parentName:"tr",align:null},"1004.17")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"THP002"),(0,r.kt)("td",{parentName:"tr",align:null},"BME280"),(0,r.kt)("td",{parentName:"tr",align:null},"26.58"),(0,r.kt)("td",{parentName:"tr",align:null},"51.79"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-07-21T14:54:59.287416Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Apex"),(0,r.kt)("td",{parentName:"tr",align:null},"75.93"),(0,r.kt)("td",{parentName:"tr",align:null},"1004.16")))),(0,r.kt)("p",null,"This is what that table looks like in the QuestDB Web Console:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Table in QuestDB Web Console",src:n(99697).Z})),(0,r.kt)("h2",{id:"but-how-did-you-write-that"},"But how did you write that?"),(0,r.kt)("p",null,"Oh, so how did I write that ILP to QuestDB? Well, my sensor is an Arduino, with\na Bosch BME280 sensor attached. It is WiFi connected, so a ",(0,r.kt)("inlineCode",{parentName:"p"},"WiFiClient")," can do\nthe TCP write for me:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C",metastring:'title="WiFiClient Connect"',title:'"WiFiClient','Connect"':!0},"espClient.connect(Quest_Server, 9009);\n")),(0,r.kt)("p",null,"Will connect the client to the QuestDB Server defined by ",(0,r.kt)("inlineCode",{parentName:"p"},"Quest_Server")," on port\n",(0,r.kt)("inlineCode",{parentName:"p"},"9009"),"."),(0,r.kt)("p",null,"If I then have a line of ILP like this:\n",(0,r.kt)("inlineCode",{parentName:"p"},"iot,dev_id=THPL002,dev_loc=Demo,dev_name=BME280 temp_c=23.18,altitude=93.10,humidity=52.16,pressure=1002.12\\n"),"\nin a ",(0,r.kt)("inlineCode",{parentName:"p"},"buffer")," I can call ",(0,r.kt)("inlineCode",{parentName:"p"},"espClient.printf(buffer);")," and that line of data will\nbe written to QuestDB."),(0,r.kt)("h2",{id:"can-i-do-batch-writes"},"Can I do batch writes?"),(0,r.kt)("p",null,"Of course, you can! Put each line of ILP on a separate 'line', separated by a\nnewline ",(0,r.kt)("inlineCode",{parentName:"p"},"\\n"),", and then when you have all your batch built up, write the whole\nthing to QuestDB."),(0,r.kt)("p",null,"Of course, if you're relying on QuestDB to add ",(0,r.kt)("inlineCode",{parentName:"p"},"timestamps")," for you, then be\naware that QuestDB will give the entire batch sequential timestamps based on\nwhen they are read/written to the database."),(0,r.kt)("h2",{id:"conclusions"},"Conclusions"),(0,r.kt)("p",null,"InfluxDB Line Protocol (ILP) is a simple, well-known, and relatively compact\ndata format for sending Time Series data to a database. That's why we decided to\nsupport it."),(0,r.kt)("p",null,"I'm now going to give you a simple configuration change to migrate from using\nInfluxDB to using QuestDB. If you're using Telegraf as a data collector, we have\n",(0,r.kt)("a",{parentName:"p",href:"/docs/third-party-tools/telegraf"},"documentation for integrating with QuestDB"),"\nfor more details, but to summarize the migration, edit ",(0,r.kt)("inlineCode",{parentName:"p"},"telegraf.conf")," (it may\nbe in different places, depending on your operating system) and change the line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'[[outputs.influxdb]]\n  urls = ["http://127.0.0.1:8086"]\n')),(0,r.kt)("p",null,"to be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'[[outputs.socket_writer]]\n  address = "tcp://127.0.0.1:9009"\n')),(0,r.kt)("p",null,"That's it. That's the migration. All data that was previously being written to\nInfluxDB will now be written to QuestDB."))}m.isMDXComponent=!0},86010:function(e,t,n){function a(e){var t,n,l="";if("string"==typeof e||"number"==typeof e)l+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(l&&(l+=" "),l+=n);else for(t in e)e[t]&&(l&&(l+=" "),l+=t);return l}function l(){for(var e,t,n=0,l="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(l&&(l+=" "),l+=t);return l}n.d(t,{Z:function(){return l}})},99697:function(e,t,n){t.Z=n.p+"assets/images/tableShot-5a098be4e04497b06903a3de299d76b3.png"}}]);