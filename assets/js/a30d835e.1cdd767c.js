"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[3896],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=u(n),d=r,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||l;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7325:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),o=["components"],i={title:"Conditional functions",sidebar_label:"Conditional",description:"Conditional functions reference documentation."},p={unversionedId:"reference/function/conditional",id:"reference/function/conditional",isDocsHomePage:!1,title:"Conditional functions",description:"Conditional functions reference documentation.",source:"@site/docs/reference/function/conditional.md",sourceDirName:"reference/function",slug:"/reference/function/conditional",permalink:"/docs/reference/function/conditional",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/reference/function/conditional.md",version:"current",sidebar_label:"Conditional",frontMatter:{title:"Conditional functions",sidebar_label:"Conditional",description:"Conditional functions reference documentation."},sidebar:"docs",previous:{title:"Boolean functions",permalink:"/docs/reference/function/boolean"},next:{title:"Date and time functions",permalink:"/docs/reference/function/date-time"}},u=[{value:"coalesce",id:"coalesce",children:[]},{value:"nullif",id:"nullif",children:[]}],c={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Conditional functions allow for conditionally selecting input values. For\ninstance, the ",(0,l.kt)("inlineCode",{parentName:"p"},"coalesce()")," function is useful for handling null data values and\nproviding replacement values."),(0,l.kt)("h2",{id:"coalesce"},"coalesce"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"coalesce(value [, ...])")," - returns the first non-null argument in a provided\nlist of arguments in cases where null values should not appear in query results."),(0,l.kt)("p",null,"This function is an implementation of the ",(0,l.kt)("inlineCode",{parentName:"p"},"COALESCE")," expression in PostgreSQL\nand as such, should follow the expected behavior described in the\n",(0,l.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL"},"coalesce PostgreSQL documentation")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"coalesce(value [, ...])")," ",(0,l.kt)("inlineCode",{parentName:"li"},"value")," and subsequent comma-separated list of\narguments which may be of any type except binary. If the provided arguments\nare of different types, one should be ",(0,l.kt)("inlineCode",{parentName:"li"},"CAST"),"able to another.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"The returned value is the first non-null argument passed."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("p",null,"Given a table with the following records:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"timestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"amount"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.332822Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333481Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333511Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3")))),(0,l.kt)("p",null,"The following example demonstrates how to use ",(0,l.kt)("inlineCode",{parentName:"p"},"coalesce()")," to return a default\nvalue of ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," for an expression if the ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," column contains ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," values."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT timestamp,\n       coalesce(amount, 0) as amount_not_null\nFROM transactions\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"timestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"amount_not_null"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.332822Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333481Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333511Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3")))),(0,l.kt)("h2",{id:"nullif"},"nullif"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"nullif(value1, value2)")," - returns a null value if ",(0,l.kt)("inlineCode",{parentName:"p"},"value1")," is equal to ",(0,l.kt)("inlineCode",{parentName:"p"},"value2"),"\nor otherwise returns ",(0,l.kt)("inlineCode",{parentName:"p"},"value1"),"."),(0,l.kt)("p",null,"This function is an implementation of the ",(0,l.kt)("inlineCode",{parentName:"p"},"NULLIF")," expression in PostgreSQL and\nas such, should follow the expected behavior described in the\n",(0,l.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL"},"nullif PostgreSQL documentation"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value1")," is any numeric, char, or string value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value2")," is any numeric, char, or string value.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return value:")),(0,l.kt)("p",null,"The returned value is either ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL"),", or the first argument passed."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("p",null,"Given a table with the following records:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"timestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"amount"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.332822Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333481Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"11")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333511Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3")))),(0,l.kt)("p",null,"The following example demonstrates how to use ",(0,l.kt)("inlineCode",{parentName:"p"},"nullif()")," to return a ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," if\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," column contains ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," values."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT timestamp,\n       nullif(amount, 0) as amount_null_if_zero\nFROM transactions\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"timestamp"),(0,l.kt)("th",{parentName:"tr",align:"left"},"amount_null_if_zero"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.332822Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333481Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"11")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"2021-02-11T09:39:16.333511Z"),(0,l.kt)("td",{parentName:"tr",align:"left"},"3")))))}m.isMDXComponent=!0}}]);