"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[8912],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return u}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=d(a),u=r,h=m["".concat(l,".").concat(u)]||m[u]||p[u]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},39:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},metadata:function(){return p},toc:function(){return m},default:function(){return b}});var n,r=a(83117),i=a(80102),o=(a(67294),a(3905)),s=a(46092),l=a(25042),d=["components"],c={title:"Demo of live crypto data streamed with QuestDB and Grafana",author:"Nicolas Hourcard",author_title:"QuestDB Team",author_url:"https://github.com/tris0laris",author_image_url:"https://avatars.githubusercontent.com/tris0laris",description:"Demo of live crypto data streamed with QuestDB and Grafana",keywords:["crypto","bitcoin","timeseries","coinbase","grafana","sql"],tags:["demo","crypto","bitcoin","coinbase","grafana","opensource","candlestick"],image:"/img/blog/2022-04-12/cover.png"},p={permalink:"/blog/2022/04/12/demo-live-crypto-data-streamed-with-questdb-and-grafana",source:"@site/blog/2022-04-12-demo-live-crypto-data-streamed-with-questdb-and-grafana.mdx",title:"Demo of live crypto data streamed with QuestDB and Grafana",description:"Demo of live crypto data streamed with QuestDB and Grafana",date:"2022-04-12T00:00:00.000Z",formattedDate:"April 12, 2022",tags:[{label:"demo",permalink:"/blog/tags/demo"},{label:"crypto",permalink:"/blog/tags/crypto"},{label:"bitcoin",permalink:"/blog/tags/bitcoin"},{label:"coinbase",permalink:"/blog/tags/coinbase"},{label:"grafana",permalink:"/blog/tags/grafana"},{label:"opensource",permalink:"/blog/tags/opensource"},{label:"candlestick",permalink:"/blog/tags/candlestick"}],readingTime:3.825,truncated:!0,prevItem:{title:"Enabling Machine Learning in QuestDB with MindsDB",permalink:"/blog/2022/04/18/enabling-machine-learning-in-questdb-with-mindsdb"},nextItem:{title:"Crypto Volume Profiles with QuestDB and Julia",permalink:"/blog/2022/03/29/crypto-volumes-julia-questdb"}},m=[{value:"Last prices of BTC and ETH",id:"last-prices-of-btc-and-eth",children:[]},{value:"Candle chart sampled by time",id:"candle-chart-sampled-by-time",children:[]},{value:"VWAP Bitcoin price sampled by time",id:"vwap-bitcoin-price-sampled-by-time",children:[]},{value:"Implied BTC-ETH exchange rate",id:"implied-btc-eth-exchange-rate",children:[]},{value:"Conclusion",id:"conclusion",children:[]}],u=(n="QueryButton",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),h={toc:m};function b(e){var t=e.components,a=(0,i.Z)(e,d);return(0,o.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{alt:"Live crypto data ingested in QuestDB and displayed on Grafana",height:360,src:"/img/blog/2022-04-12/cover.png",width:650,mdxType:"Banner"}),(0,o.kt)("p",null,"At QuestDB we are all about performance. To showcase querying capabilities of\nthe database we have been running a live demo of historical taxi rides in NYC with 1.6 billion rows  ",(0,o.kt)("sup",null,(0,o.kt)("a",{parentName:"p",href:"https://news.ycombinator.com/item?id=23616878"},"1"))," and a geospatial dataset that contains the locations of 250k unique ships ",(0,o.kt)("sup",null,(0,o.kt)("a",{parentName:"p",href:"https://www.reddit.com/r/programming/comments/q1vnfi/demo_geospatial_and_timeseries_queries_on_250k/"},"2"))," moving over time. You can analyze this dataset with SQL on our ",(0,o.kt)("a",{parentName:"p",href:"https://demo.questdb.io/"},"live instance")," and see how fast each query is processed. Today, we introduce a new dataset on the same demo instance: crypto market\ndata ingested in real-time from the Coinbase Exchange. For ingestion, we use a\nconvenient Python library ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bmoscon/cryptofeed"},"Cryptofeed"),", a\ncryptocurrency exchange feed handler that supports QuestDB. And for\nvisualization, we use Grafana to create interactive live charts, which refresh\nevery 5 seconds."),(0,o.kt)("p",null,"We ingest the following columns into QuestDB in real-time for each BTC-USD and\nETH-USD trades coming through the Coinbase Exchange:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"price"),(0,o.kt)("li",{parentName:"ul"},"side (buy/sell)"),(0,o.kt)("li",{parentName:"ul"},"amount"),(0,o.kt)("li",{parentName:"ul"},"timestamp")),(0,o.kt)("p",null,"To get you started, we added a set of example queries in the live demo of\nQuestDB web console. These pre-written queries leverage the standard SQL syntax\nand time-series SQL extensions in QuestDB. When clicking on a query, it's\nautomatically added to the SQL editor. Then, click the ",(0,o.kt)("kbd",null,"Run")," button or\npress ",(0,o.kt)("kbd",null,"F9")," to execute the query. Despite the large amount of data\nstored on the demo instance, the queries should come back in milliseconds!"),(0,o.kt)("p",null,"Let's go through these sample queries one by one."),(0,o.kt)("h2",{id:"last-prices-of-btc-and-eth"},"Last prices of BTC and ETH"),(0,o.kt)("p",null,"To find out the latest prices of BTC and ETH in USD. We use the\n",(0,o.kt)("a",{parentName:"p",href:"https://questdb.io/docs/reference/sql/latest-on"},(0,o.kt)("inlineCode",{parentName:"a"},"LATEST ON"))," syntax, which is\nnative to QuestDB's SQL Engine:"),(0,o.kt)("p",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Latest BTC and ETH prices"',title:'"Latest',BTC:!0,and:!0,ETH:!0,'prices"':!0},"SELECT * FROM trades\nWHERE symbol in ('BTC-USD', 'ETH-USD')\nLATEST ON timestamp PARTITION BY symbol;\n")),(0,o.kt)(u,{href:"https://demo.questdb.io/?query=SELECT%20%2a%20FROM%20trades%0AWHERE%20symbol%20in%20%28%27BTC-USD%27%2C%20%27ETH-USD%27%29%0ALATEST%20ON%20timestamp%20PARTITION%20BY%20symbol%3B",mdxType:"QueryButton"})),(0,o.kt)("p",null,"Below is a real-time chart for Bitcoin and Ethereum prices with a time sample of 10\nseconds."),(0,o.kt)(l.Z,{src:"https://dashboard.questdb.io/d-solo/624FG0snk/public-dashboard-1?orgId=1&panelId=10&refresh=5s",mdxType:"Grafana"}),(0,o.kt)("h2",{id:"candle-chart-sampled-by-time"},"Candle chart sampled by time"),(0,o.kt)("p",null,"This query returns open, close, minimal and maximal prices as well as cumulated\nvolumes with 15-minute intervals. We use the\n",(0,o.kt)("a",{parentName:"p",href:"https://questdb.io/docs/reference/sql/sample-by/"},(0,o.kt)("inlineCode",{parentName:"a"},"SAMPLE BY"))," syntax, which\naggregates time series data into homogeneous time chunks:"),(0,o.kt)("p",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Candle chart with 15-minute intervals"',title:'"Candle',chart:!0,with:!0,"15-minute":!0,'intervals"':!0},"SELECT \n    timestamp,\n    first(price) AS open,\n    last(price) AS close,\n    min(price),\n    max(price),\n    sum(amount) AS volume\nFROM trades\nWHERE symbol = 'BTC-USD' AND timestamp > dateadd('d', -1, now())\nSAMPLE BY 15m ALIGN TO CALENDAR;\n")),(0,o.kt)(u,{href:"https://demo.questdb.io/?query=SELECT%20%0A%20%20%20%20timestamp%2C%0A%20%20%20%20first%28price%29%20AS%20open%2C%0A%20%20%20%20last%28price%29%20AS%20close%2C%0A%20%20%20%20min%28price%29%2C%0A%20%20%20%20max%28price%29%2C%0A%20%20%20%20sum%28amount%29%20AS%20volume%0AFROM%20trades%0AWHERE%20symbol%20%3D%20%27BTC-USD%27%20AND%20timestamp%20%3E%20dateadd%28%27d%27%2C%20-1%2C%20now%28%29%29%0ASAMPLE%20BY%2015m%20ALIGN%20TO%20CALENDAR%3B",mdxType:"QueryButton"})),(0,o.kt)("p",null,"This real-time chart on Grafana plots the candle chart with a time sample of 10\nseconds. We also show the volume traded on a secondary axis."),(0,o.kt)(l.Z,{src:"https://dashboard.questdb.io/d-solo/624FG0snk/public-dashboard-1?orgId=1&panelId=8&refresh=5s",mdxType:"Grafana"}),(0,o.kt)("h2",{id:"vwap-bitcoin-price-sampled-by-time"},"VWAP Bitcoin price sampled by time"),(0,o.kt)("p",null,"For each 15 minutes interval, we calculate the average price of BTC-USD adjusted\nfor the volume of trades during that period. This query includes the\n",(0,o.kt)("a",{parentName:"p",href:"https://questdb.io/docs/reference/sql/where/"},(0,o.kt)("inlineCode",{parentName:"a"},"WHERE"))," clause that is\naccelerated by our new JIT Compiler (see the ",(0,o.kt)("em",{parentName:"p"},"lightning")," in the logs). And once\nagain, we downsample the dataset using ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMPLE BY"),"."),(0,o.kt)("p",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Volume-weighted average price"',title:'"Volume-weighted',average:!0,'price"':!0},"SELECT \n    timestamp,\n    sum(price * amount) / sum(amount) AS vwap_price,\n    sum(amount) AS volume\nFROM trades\nWHERE symbol = 'BTC-USD' AND timestamp > dateadd('d', -1, now())\nSAMPLE BY 15m ALIGN TO CALENDAR;\n")),(0,o.kt)(u,{href:"https://demo.questdb.io/?query=SELECT%20%0A%20%20%20%20timestamp%2C%0A%20%20%20%20sum%28price%20%2a%20amount%29%20%2F%20sum%28amount%29%20AS%20vwap_price%2C%0A%20%20%20%20sum%28amount%29%20AS%20volume%0AFROM%20trades%0AWHERE%20symbol%20%3D%20%27BTC-USD%27%20AND%20timestamp%20%3E%20dateadd%28%27d%27%2C%20-1%2C%20now%28%29%29%0ASAMPLE%20BY%2015m%20ALIGN%20TO%20CALENDAR%3B",mdxType:"QueryButton"})),(0,o.kt)("p",null,"The following real-time chart displays the distribution of trades based on their\nsize and paints a more granular picture of volume traded."),(0,o.kt)(l.Z,{src:"https://dashboard.questdb.io/d-solo/624FG0snk/public-dashboard-1?orgId=1&panelId=12&refresh=5s",mdxType:"Grafana"}),(0,o.kt)("h2",{id:"implied-btc-eth-exchange-rate"},"Implied BTC-ETH exchange rate"),(0,o.kt)("p",null,"The two series of prices for BTC-USD and ETH-USD have different unique\ntimestamps. In order to join these two series where timestamps do not exactly\nmatch, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"ASOF JOIN")," syntax and then divide the price of BTC-USD with the\nprice of ETH-USD to get the implied BTC/ETH rate."),(0,o.kt)("p",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Implied BTC-ETH exchange rate"',title:'"Implied',"BTC-ETH":!0,exchange:!0,'rate"':!0},"WITH btc AS (\n    SELECT timestamp, price\n    FROM trades\n    WHERE symbol = 'BTC-USD' AND timestamp > dateadd('d', -30, now())\n), \neth AS (\n    SELECT timestamp, price\n    FROM trades\n    WHERE symbol = 'ETH-USD' and timestamp > dateadd('d', -30, now())\n)\nSELECT \n    btc.timestamp btc_time, \n    btc.price btc_price, \n    eth.price eth_price, \n    round(btc.price/eth.price, 3) btc_to_eth_ratio\nFROM btc\nASOF JOIN eth;\n")),(0,o.kt)(u,{href:"https://demo.questdb.io/?query=WITH%20btc%20AS%20%28%0A%20%20%20%20SELECT%20timestamp%2C%20price%0A%20%20%20%20FROM%20trades%0A%20%20%20%20WHERE%20symbol%20%3D%20%27BTC-USD%27%20AND%20timestamp%20%3E%20dateadd%28%27d%27%2C%20-30%2C%20now%28%29%29%0A%29%2C%20%0Aeth%20AS%20%28%0A%20%20%20%20SELECT%20timestamp%2C%20price%0A%20%20%20%20FROM%20trades%0A%20%20%20%20WHERE%20symbol%20%3D%20%27ETH-USD%27%20and%20timestamp%20%3E%20dateadd%28%27d%27%2C%20-30%2C%20now%28%29%29%0A%29%0ASELECT%20%0A%20%20%20%20btc.timestamp%20btc_time%2C%20%0A%20%20%20%20btc.price%20btc_price%2C%20%0A%20%20%20%20eth.price%20eth_price%2C%20%0A%20%20%20%20round%28btc.price%2Feth.price%2C%203%29%20btc_to_eth_ratio%0AFROM%20btc%0AASOF%20JOIN%20eth%3B",mdxType:"QueryButton"})),(0,o.kt)("p",null,"The following real-time chart plots three series: BTC-USD, ETH-USD and the\nimplied BTC-ETH cross price."),(0,o.kt)(l.Z,{src:"https://dashboard.questdb.io/d-solo/624FG0snk/public-dashboard-1?orgId=1&panelId=14&refresh=5s",mdxType:"Grafana"}),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"We hope you find these example queries and charts useful to get started. Let us\nknow about other useful queries you build on our demo server! If you're\ninterested in setting up something similar within your organizations or for\npersonal projects, you can get started on\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb#try-questdb"},"GitHub")," or join our community\non ",(0,o.kt)("a",{parentName:"p",href:"https://"},"Slack"),"."))}b.isMDXComponent=!0},86010:function(e,t,a){function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}a.d(t,{Z:function(){return r}})}}]);