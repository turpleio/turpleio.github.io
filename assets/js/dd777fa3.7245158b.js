"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[4847],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},10396:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),s=n(72525),o=["components"],l={title:"QuestDB 6.0.4 July release, Prometheus metrics support",author:"Brian Smith",author_title:"QuestDB Team",author_url:"https://github.com/bsmth",author_image_url:"https://avatars.githubusercontent.com/bsmth",description:"QuestDB 6.0.4 is available now with highlights such as performance improvements, increased parallelization of existing code, calendar alignment for `SAMPLE BY` queries, and a new Prometheus endpoint.",keywords:["postgres","prometheus","timeseries","database"],image:"/img/blog/2021-07-16/banner.png",tags:["prometheus","influxdb","release"]},u={permalink:"/blog/2021/07/16/release-6-0-4-prometheus-metrics",source:"@site/blog/2021-07-16-release-6-0-4-prometheus-metrics.md",title:"QuestDB 6.0.4 July release, Prometheus metrics support",description:"QuestDB 6.0.4 is available now with highlights such as performance improvements, increased parallelization of existing code, calendar alignment for `SAMPLE BY` queries, and a new Prometheus endpoint.",date:"2021-07-16T00:00:00.000Z",formattedDate:"July 16, 2021",tags:[{label:"prometheus",permalink:"/blog/tags/prometheus"},{label:"influxdb",permalink:"/blog/tags/influxdb"},{label:"release",permalink:"/blog/tags/release"}],readingTime:3.365,truncated:!0,prevItem:{title:"Comparing TimescaleDB and QuestDB timeseries databases",permalink:"/blog/2021/08/18/questdb-versus-timescaledb"},nextItem:{title:"Using Telegraf and QuestDB to store metrics in a time series database",permalink:"/blog/2021/07/09/telegraf-and-questdb-for-storing-metrics-in-a-timeseries-database"}},p=[{value:"QuestDB 6.0.4",id:"questdb-604",children:[{value:"SAMPLE BY with calendar alignment",id:"sample-by-with-calendar-alignment",children:[]},{value:"SQL performance improvements",id:"sql-performance-improvements",children:[]},{value:"Prometheus metrics",id:"prometheus-metrics",children:[]},{value:"Breaking changes",id:"breaking-changes",children:[]}]},{value:"How to run QuestDB 6.0.4",id:"how-to-run-questdb-604",children:[]},{value:"Next up",id:"next-up",children:[]}],c={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We've published the latest QuestDB release, and it focuses on community-driven\ntopics raised with us recently by our users. The features included are\nperformance improvements, increased parallelization of existing code, and\ncalendar alignment for ",(0,i.kt)("inlineCode",{parentName:"p"},"SAMPLE BY")," queries. Also included is the introduction of\na framework for exposing Prometheus metrics by our community member Piotr\nR\u017cysko. Here's the full roundup of changes that have just landed!"),(0,i.kt)("h2",{id:"questdb-604"},"QuestDB 6.0.4"),(0,i.kt)("p",null,"This release fixes issues raised and prioritized by the developer community, and\nincludes stability fixes across several subsystems. The addition of a framework\nfor Prometheus metrics is an exciting feature that we expect will be\ncontinuously developed with more types of counters and gauges added as we get\nfeedback on its use. The addition of monitoring using Prometheus will simplify\nhow users gain insights into the performance and activity of deployed instances\nof QuestDB."),(0,i.kt)("h3",{id:"sample-by-with-calendar-alignment"},"SAMPLE BY with calendar alignment"),(0,i.kt)("p",null,"It's now possible to perform ",(0,i.kt)("inlineCode",{parentName:"p"},"SAMPLE BY")," queries where the sampled groups align\nstrictly to calendar dates with optional time zones and offsets. The default\nbehavior for sampling is unchanged from previous releases, and calendar\nalignment is possible through the use of the following optional keywords:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT ts, count() FROM sensors\nSAMPLE BY 1d\nALIGN TO CALENDAR\n-- additional configuration for offsets and time zones\nALIGN TO CALENDAR WITH OFFSET\nALIGN TO CALENDAR TIME ZONE {tz_id}\nALIGN TO CALENDAR TIME ZONE {tz_id} WITH OFFSET\n")),(0,i.kt)("p",null,"For more information on using calendar alignment with sampled groups, see the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/sql/sample-by#align-to-calendar"},"SAMPLE BY documentation"),"."),(0,i.kt)("h3",{id:"sql-performance-improvements"},"SQL performance improvements"),(0,i.kt)("p",null,"We gathered user feedback on the most critical query types that require faster\nexecution speed, and we have improved ",(0,i.kt)("inlineCode",{parentName:"p"},"LATEST BY")," handling internally. These\nenhancements are possible by massively parallelizing how these operations are\nexecuted and optimizing aggregate calculations within sampled groups. Users will\nsee these improvements with the following two query types:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"-- indexed columns\nSELECT * FROM my_table LATEST BY indexed_col;\n-- indexed columns with filtering using WHERE\nSELECT * FROM my_table LATEST BY indexed_col WHERE other_col > 9000;\n")),(0,i.kt)("h3",{id:"prometheus-metrics"},"Prometheus metrics"),(0,i.kt)("p",null,"The new implementation for ",(0,i.kt)("a",{parentName:"p",href:"https://prometheus.io/"},"Prometheus")," monitoring\nallows for adding basic counters and will be improved in upcoming releases. To\nactivate Prometheus metrics, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"metrics.enabled")," key to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in\nQuestDB's ",(0,i.kt)("inlineCode",{parentName:"p"},"server.conf")," ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/configuration"},"configuration file"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini",metastring:"title=server.conf",title:"server.conf"},"metrics.enabled=true\n")),(0,i.kt)("p",null,"Create a Prometheus configuration file that points to QuestDB's metrics endpoint\non ",(0,i.kt)("inlineCode",{parentName:"p"},"9003"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="questdb.yml"',title:'"questdb.yml"'},'global:\n  scrape_interval: 15s\n  external_labels:\n    monitor: "questdb"\n\nscrape_configs:\n  - job_name: "questdb"\n    scrape_interval: 5s\n    static_configs:\n      - targets: ["127.0.0.1:9003"]\n')),(0,i.kt)("p",null,"Start Prometheus, passing the configuration file with the QuestDB settings:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"prometheus --config.file=questdb.yml\n")),(0,i.kt)(s.Z,{alt:"Prometheus monitoring server metrics from a QuestDB instance",height:415,src:"/img/blog/2021-07-16/prometheus-questdb.png",title:"Basic counter for number of SQL queries executed",width:650,mdxType:"Screenshot"}),(0,i.kt)("p",null,"The initial implementation adds a basic counter for the number of executed SQL\nqueries which can be charted, or alerts may be configured for this metric. If\nyou have some suggestions for the types of counters and gauges we should\ninclude,\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb/discussions"},"let us know on GitHub"),"."),(0,i.kt)("h3",{id:"breaking-changes"},"Breaking changes"),(0,i.kt)("p",null,"The addition of special handling for ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," in\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb/pull/1179"},"#1179")," introduces changes that\nenforce timestamps having ",(0,i.kt)("strong",{parentName:"p"},"only positive values"),". This means that timestamps\ncannot predate epoch 0 in UTC, disallowing pre-1970 values."),(0,i.kt)("h2",{id:"how-to-run-questdb-604"},"How to run QuestDB 6.0.4"),(0,i.kt)("p",null,"The release notes including a changelog is\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb/releases/tag/6.0.4"},"available on GitHub")," and\nthis version has been published to\n",(0,i.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/questdb/questdb/tags?page=1&ordering=last_updated"},"Docker Hub"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull questdb/questdb:6.0.4\n")),(0,i.kt)("p",null,"To start up QuestDB, use ",(0,i.kt)("inlineCode",{parentName:"p"},"docker run"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 9000:9000 -p 8812:8812 -p 9009:9009 \\\n  questdb/questdb:6.0.4\n")),(0,i.kt)("h2",{id:"next-up"},"Next up"),(0,i.kt)("p",null,"We are now trying out\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb/discussions"},"GitHub discussions")," as a way to\nget the conversation about QuestDB started! We have some great topics already so\nfar since we activated this feature, and we expect this to be a fun and easy way\nto get involved on GitHub with open-ended discussions."),(0,i.kt)("p",null,"We're eagerly awaiting feedback on this release, so feel free to reach out and\ntell us how this version is running. Let us know how we're doing or just come by\nand say hello ",(0,i.kt)("a",{parentName:"p",href:"https://"},"in our Slack Community")," or browse the repository\n",(0,i.kt)("a",{parentName:"p",href:"https://"},"on GitHub"),"."))}d.isMDXComponent=!0},86010:function(e,t,n){function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})}}]);