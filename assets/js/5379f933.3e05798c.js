"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[5410],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=c(r),m=o,g=f["".concat(l,".").concat(m)]||f[m]||p[m]||a;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},38007:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var n=r(83117),o=r(80102),a=(r(67294),r(3905)),i=r(46092),s=["components"],l={title:"Aggregating billions of rows per second with SIMD",author:"Tancrede Collard",author_title:"QuestDB Team",author_url:"https://github.com/TheTanc",author_image_url:"https://avatars.githubusercontent.com/TheTanc",description:"How SIMD instructions make aggregations faster in QuestDB, including benchmark results and a comparison with Postgres.",keywords:["performance","simd","parallelization","cpu","questdb"],tags:["benchmark","performance","simd","release"],image:"/img/blog/2020-04-02/banner.png"},c={permalink:"/blog/2020/04/02/using-simd-to-aggregate-billions-of-rows-per-second",source:"@site/blog/2020-04-02-using-simd-to-aggregate-billions-of-rows-per-second.md",title:"Aggregating billions of rows per second with SIMD",description:"How SIMD instructions make aggregations faster in QuestDB, including benchmark results and a comparison with Postgres.",date:"2020-04-02T00:00:00.000Z",formattedDate:"April 2, 2020",tags:[{label:"benchmark",permalink:"/blog/tags/benchmark"},{label:"performance",permalink:"/blog/tags/performance"},{label:"simd",permalink:"/blog/tags/simd"},{label:"release",permalink:"/blog/tags/release"}],readingTime:6.385,truncated:!0,prevItem:{title:"Things we learned about sums",permalink:"/blog/2020/05/12/interesting-things-we-learned-about-sums"},nextItem:{title:"Speeding up InfluxDB line protocol",permalink:"/blog/2019/12/19/lineprot"}},u=[],p={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i.Z,{alt:"QuestDB release 4.2 banner",height:143,src:"/img/blog/2020-04-02/banner.png",width:650,mdxType:"Banner"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SIMD"},"SIMD instructions")," are specific CPU\ninstruction sets for arithmetic calculations that use synthetic parallelization.\nThis approach allows us to perform the same calculations and operations on\nnumerous data points simultaneously. This post describes how SIMD works with\ntypical operation performance and describes additional optimizations we managed\nto achieve."))}f.isMDXComponent=!0},86010:function(e,t,r){function n(e){var t,r,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(r=n(e[t]))&&(o&&(o+=" "),o+=r);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function o(){for(var e,t,r=0,o="";r<arguments.length;)(e=arguments[r++])&&(t=n(e))&&(o&&(o+=" "),o+=t);return o}r.d(t,{Z:function(){return o}})}}]);