"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[8378],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=l,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||r;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},11:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=n(3117),l=n(102),r=(n(7294),n(3905)),i=["components"],o={title:"LATEST ON keyword",sidebar_label:"LATEST ON",description:"Reference documentation for using LATEST ON keywords with examples for illustration."},s={unversionedId:"reference/sql/latest-on",id:"reference/sql/latest-on",isDocsHomePage:!1,title:"LATEST ON keyword",description:"Reference documentation for using LATEST ON keywords with examples for illustration.",source:"@site/docs/reference/sql/latest-on.md",sourceDirName:"reference/sql",slug:"/reference/sql/latest-on",permalink:"/docs/reference/sql/latest-on",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/reference/sql/latest-on.md",version:"current",sidebar_label:"LATEST ON",frontMatter:{title:"LATEST ON keyword",sidebar_label:"LATEST ON",description:"Reference documentation for using LATEST ON keywords with examples for illustration."},sidebar:"docs",previous:{title:"JOIN keyword",permalink:"/docs/reference/sql/join"},next:{title:"LIMIT keyword",permalink:"/docs/reference/sql/limit"}},p=[{value:"Syntax",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Examples",id:"examples",children:[{value:"Single column",id:"single-column",children:[]},{value:"Multiple columns",id:"multiple-columns",children:[]},{value:"LATEST ON over sub-query",id:"latest-on-over-sub-query",children:[]},{value:"Execution order",id:"execution-order",children:[]},{value:"WHERE first",id:"where-first",children:[]},{value:"LATEST ON first",id:"latest-on-first",children:[]},{value:"Combination",id:"combination",children:[]}]}],d={toc:p};function u(e){var t=e.components,o=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Retrieves the latest entry by timestamp for a given key or combination of keys,\nfor scenarios where multiple time series are stored in the same table."),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Flow chart showing the syntax of the LATEST ON keyword",src:n(4781).Z})),(0,r.kt)("p",null,"where:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"columnName")," used in the ",(0,r.kt)("inlineCode",{parentName:"li"},"LATEST ON")," part of the clause is a ",(0,r.kt)("inlineCode",{parentName:"li"},"TIMESTAMP"),"\ncolumn."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"columnName")," list used in the ",(0,r.kt)("inlineCode",{parentName:"li"},"PARTITION BY")," part of the clause is a list of\ncolumns of one of the following types: ",(0,r.kt)("inlineCode",{parentName:"li"},"SYMBOL"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"STRING"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"BOOLEAN"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"SHORT"),",\n",(0,r.kt)("inlineCode",{parentName:"li"},"INT"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LONG"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LONG256"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"CHAR"),".")),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," is used as part of a ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/sql/select"},"SELECT statement"),"\nfor returning the most recent records per unique time series identified by the\n",(0,r.kt)("inlineCode",{parentName:"p"},"PARTITION BY")," column values. This function requires a\n",(0,r.kt)("a",{parentName:"p",href:"/docs/concept/designated-timestamp"},"designated timestamp"),"."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"To use ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON"),", a timestamp column used in the ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," part needs to be\nspecified as a ",(0,r.kt)("strong",{parentName:"p"},"designated timestamp"),". More information can be found in the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/concept/designated-timestamp"},"designated timestamp")," page for specifying\nthis at table creation or at query time."))),(0,r.kt)("p",null,"To illustrate how ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," is intended to be used, consider the ",(0,r.kt)("inlineCode",{parentName:"p"},"trips")," table\n",(0,r.kt)("a",{parentName:"p",href:"https://demo.questdb.io/"},"in the QuestDB demo instance"),". This table has a\n",(0,r.kt)("inlineCode",{parentName:"p"},"payment_type")," column as ",(0,r.kt)("inlineCode",{parentName:"p"},"SYMBOL")," type which specifies the method of payment per\ntrip. We can find the most recent trip for each unique method of payment with\nthe following query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT payment_type, pickup_datetime, trip_distance\nFROM trips\nLATEST ON pickup_datetime PARTITION BY payment_type;\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"payment_type"),(0,r.kt)("th",{parentName:"tr",align:null},"pickup_datetime"),(0,r.kt)("th",{parentName:"tr",align:null},"trip_distance"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dispute"),(0,r.kt)("td",{parentName:"tr",align:null},"2014-12-31T23:55:27.000000Z"),(0,r.kt)("td",{parentName:"tr",align:null},"1.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Voided"),(0,r.kt)("td",{parentName:"tr",align:null},"2019-06-27T17:56:45.000000Z"),(0,r.kt)("td",{parentName:"tr",align:null},"1.9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Unknown"),(0,r.kt)("td",{parentName:"tr",align:null},"2019-06-30T23:57:42.000000Z"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"No Charge"),(0,r.kt)("td",{parentName:"tr",align:null},"2019-06-30T23:59:30.000000Z"),(0,r.kt)("td",{parentName:"tr",align:null},"5.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Cash"),(0,r.kt)("td",{parentName:"tr",align:null},"2019-06-30T23:59:54.000000Z"),(0,r.kt)("td",{parentName:"tr",align:null},"2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Card"),(0,r.kt)("td",{parentName:"tr",align:null},"2019-06-30T23:59:56.000000Z"),(0,r.kt)("td",{parentName:"tr",align:null},"1")))),(0,r.kt)("p",null,"The above query returns the latest value within each time series stored in the\ntable. Those time series are determined based on the values in the column(s)\nspecified in the ",(0,r.kt)("inlineCode",{parentName:"p"},"PARTITION BY")," part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," clause. In our example\nthose time series are represented by different payment types. Then the column\nused in the ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," part of the clause stands for the designated timestamp\ncolumn for the table. This allows the database to find the latest value within\neach time series."),(0,r.kt)("p",null,"The below sections will demonstrate other ways to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," clause."),(0,r.kt)("p",null,"You can also write this query with the old syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT payment_type, pickup_datetime, trip_distance\nFROM trips\nLATEST BY payment_type;\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The old ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST BY")," syntax is deprecated and will be removed soon. While it's still supported\nby the database, you should use the new ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON PARTITION BY")," syntax in your\napplications. There are two key requirements when using the new syntax:"),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol"},"A timestamp column must always be specified"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"LATEST ON")," has to follow the ",(0,r.kt)("inlineCode",{parentName:"li"},"WHERE")," clause. In the old syntax, it was vice\nversa.")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"For the next examples, we can create a table called ",(0,r.kt)("inlineCode",{parentName:"p"},"balances")," with the\nfollowing SQL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"CREATE TABLE balances (\n    cust_id SYMBOL,\n    balance_ccy SYMBOL,\n    balance DOUBLE,\n    ts TIMESTAMP\n) TIMESTAMP(ts) PARTITION BY DAY;\n\ninsert into balances values ('1', 'USD', 600.5, '2020-04-21T16:03:43.504432Z');\ninsert into balances values ('2', 'USD', 950, '2020-04-21T16:08:34.404665Z');\ninsert into balances values ('2', 'EUR', 780.2, '2020-04-21T16:11:22.704665Z');\ninsert into balances values ('1', 'USD', 1500, '2020-04-21T16:11:32.904234Z');\ninsert into balances values ('1', 'EUR', 650.5, '2020-04-22T16:11:32.904234Z');\ninsert into balances values ('2', 'USD', 900.75, '2020-04-22T16:12:43.504432Z');\ninsert into balances values ('2', 'EUR', 880.2, '2020-04-22T16:18:34.404665Z');\ninsert into balances values ('1', 'USD', 330.5, '2020-04-22T16:20:14.404997Z');\n")),(0,r.kt)("p",null,"This provides us with a table with the following content:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"cust_id"),(0,r.kt)("th",{parentName:"tr",align:null},"balance_ccy"),(0,r.kt)("th",{parentName:"tr",align:null},"balance"),(0,r.kt)("th",{parentName:"tr",align:null},"ts"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"600.5"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-21T16:01:22.104234Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"950"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-21T16:03:43.504432Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"780.2"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-21T16:08:34.404665Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"1500"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-21T16:11:22.704665Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"650.5"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:11:32.904234Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"900.75"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:12:43.504432Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"880.2"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:18:34.404665Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"330.5"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:20:14.404997Z")))),(0,r.kt)("h3",{id:"single-column"},"Single column"),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," is provided a single column of the type ",(0,r.kt)("inlineCode",{parentName:"p"},"SYMBOL"),", the query\nwill end after all distinct symbol values are found."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Latest records by customer ID"',title:'"Latest',records:!0,by:!0,customer:!0,'ID"':!0},"SELECT * FROM balances\nLATEST ON ts PARTITION BY cust_id;\n")),(0,r.kt)("p",null,"The query returns two rows with the most recent records per unique ",(0,r.kt)("inlineCode",{parentName:"p"},"cust_id"),"\nvalue:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"cust_id"),(0,r.kt)("th",{parentName:"tr",align:null},"balance_ccy"),(0,r.kt)("th",{parentName:"tr",align:null},"balance"),(0,r.kt)("th",{parentName:"tr",align:null},"ts"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"880.2"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:18:34.404665Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"330.5"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:20:14.404997Z")))),(0,r.kt)("h3",{id:"multiple-columns"},"Multiple columns"),(0,r.kt)("p",null,"When multiple columns are specified in ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," queries, the returned results\nare the most recent ",(0,r.kt)("strong",{parentName:"p"},"unique combinations")," of the column values. This example\nquery returns ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," customer ID and balance currency:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Latest balance by customer and currency"',title:'"Latest',balance:!0,by:!0,customer:!0,and:!0,'currency"':!0},"SELECT cust_id, balance_ccy, balance\nFROM balances\nLATEST ON ts PARTITION BY cust_id, balance_ccy;\n")),(0,r.kt)("p",null,"The results return the most recent records for each unique combination of\n",(0,r.kt)("inlineCode",{parentName:"p"},"cust_id")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"balance_ccy"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"cust_id"),(0,r.kt)("th",{parentName:"tr",align:null},"balance_ccy"),(0,r.kt)("th",{parentName:"tr",align:null},"balance"),(0,r.kt)("th",{parentName:"tr",align:null},"inactive"),(0,r.kt)("th",{parentName:"tr",align:null},"ts"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"650.5"),(0,r.kt)("td",{parentName:"tr",align:null},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:11:32.904234Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"900.75"),(0,r.kt)("td",{parentName:"tr",align:null},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:12:43.504432Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"880.2"),(0,r.kt)("td",{parentName:"tr",align:null},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:18:34.404665Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"330.5"),(0,r.kt)("td",{parentName:"tr",align:null},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:20:14.404997Z")))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"For a single ",(0,r.kt)("inlineCode",{parentName:"p"},"SYMBOL")," column, QuestDB will know all distinct values upfront and\nstop scanning table contents once the latest entry has been found for each\ndistinct symbol value. When ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," is provided multiple columns, QuestDB\nhas to scan the entire table to find distinct combinations of column values.\nAlthough scanning is fast, performance will degrade on hundreds of millions of\nrecords. If there are multiple columns in the ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," clause, this will\nresult in a full table scan."))),(0,r.kt)("h3",{id:"latest-on-over-sub-query"},"LATEST ON over sub-query"),(0,r.kt)("p",null,"For this example, we can create another table called ",(0,r.kt)("inlineCode",{parentName:"p"},"unordered_balances")," with\nthe following SQL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"CREATE TABLE unordered_balances (\n    cust_id SYMBOL,\n    balance_ccy SYMBOL,\n    balance DOUBLE,\n    ts TIMESTAMP\n);\n\ninsert into unordered_balances values ('2', 'USD', 950, '2020-04-21T16:08:34.404665Z');\ninsert into unordered_balances values ('1', 'USD', 330.5, '2020-04-22T16:20:14.404997Z');\ninsert into unordered_balances values ('2', 'USD', 900.75, '2020-04-22T16:12:43.504432Z');\ninsert into unordered_balances values ('1', 'USD', 1500, '2020-04-21T16:11:32.904234Z');\ninsert into unordered_balances values ('1', 'USD', 600.5, '2020-04-21T16:03:43.504432Z');\ninsert into unordered_balances values ('1', 'EUR', 650.5, '2020-04-22T16:11:32.904234Z');\ninsert into unordered_balances values ('2', 'EUR', 880.2, '2020-04-22T16:18:34.404665Z');\ninsert into unordered_balances values ('2', 'EUR', 780.2, '2020-04-21T16:11:22.704665Z');\n")),(0,r.kt)("p",null,"Note that this table doesn't have a designated timestamp column and also\ncontains time series that are unordered by ",(0,r.kt)("inlineCode",{parentName:"p"},"ts")," column."),(0,r.kt)("p",null,"Due to the absent designated timestamp column, we can't use ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," directly\non this table, but it's possible to use ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," over a sub-query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql",metastring:'title="Latest balance by customer over unordered data"',title:'"Latest',balance:!0,by:!0,customer:!0,over:!0,unordered:!0,'data"':!0},"(SELECT * FROM unordered_balances)\nLATEST ON ts PARTITION BY cust_id;\n")),(0,r.kt)("p",null,"Just like with the ",(0,r.kt)("inlineCode",{parentName:"p"},"balances")," table, the query returns two rows with the most\nrecent records per unique ",(0,r.kt)("inlineCode",{parentName:"p"},"cust_id")," value:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"cust_id"),(0,r.kt)("th",{parentName:"tr",align:null},"balance_ccy"),(0,r.kt)("th",{parentName:"tr",align:null},"balance"),(0,r.kt)("th",{parentName:"tr",align:null},"ts"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"880.2"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:18:34.404665Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"330.5"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:20:14.404997Z")))),(0,r.kt)("h3",{id:"execution-order"},"Execution order"),(0,r.kt)("p",null,"The following queries illustrate how to change the execution order in a query by\nusing brackets."),(0,r.kt)("h3",{id:"where-first"},"WHERE first"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"SELECT * FROM balances\nWHERE balance > 800\nLATEST ON ts PARTITION BY cust_id;\n")),(0,r.kt)("p",null,"This query executes ",(0,r.kt)("inlineCode",{parentName:"p"},"WHERE")," before ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," and returns the most recent\nbalance which is above 800. The execution order is as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"filter out all balances below 800"),(0,r.kt)("li",{parentName:"ul"},"find the latest balance by ",(0,r.kt)("inlineCode",{parentName:"li"},"cust_id"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"cust_id"),(0,r.kt)("th",{parentName:"tr",align:null},"balance_ccy"),(0,r.kt)("th",{parentName:"tr",align:null},"balance"),(0,r.kt)("th",{parentName:"tr",align:null},"ts"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"USD"),(0,r.kt)("td",{parentName:"tr",align:null},"1500"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:11:22.704665Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"880.2"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:18:34.404665Z")))),(0,r.kt)("h3",{id:"latest-on-first"},"LATEST ON first"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"(SELECT * FROM balances LATEST ON ts PARTITION BY cust_id) --note the brackets\nWHERE balance > 800;\n")),(0,r.kt)("p",null,"This query executes ",(0,r.kt)("inlineCode",{parentName:"p"},"LATEST ON")," before ",(0,r.kt)("inlineCode",{parentName:"p"},"WHERE")," and returns the most recent\nrecords, then filters out those below 800. The steps are:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Find the latest balances by customer ID."),(0,r.kt)("li",{parentName:"ol"},"Filter out balances below 800. Since the latest balance for customer 1 is\nequal to 330.5, it is filtered out in this step.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"cust_id"),(0,r.kt)("th",{parentName:"tr",align:null},"balance_ccy"),(0,r.kt)("th",{parentName:"tr",align:null},"balance"),(0,r.kt)("th",{parentName:"tr",align:null},"inactive"),(0,r.kt)("th",{parentName:"tr",align:null},"ts"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"EUR"),(0,r.kt)("td",{parentName:"tr",align:null},"880.2"),(0,r.kt)("td",{parentName:"tr",align:null},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:null},"2020-04-22T16:18:34.404665Z")))),(0,r.kt)("h3",{id:"combination"},"Combination"),(0,r.kt)("p",null,"It's possible to combine a time-based filter with the balance filter from the\nprevious example to query the latest values for the ",(0,r.kt)("inlineCode",{parentName:"p"},"2020-04-21")," date and filter\nout those below 800."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"(balances WHERE ts in '2020-04-21' LATEST ON ts PARTITION BY cust_id)\nWHERE balance > 800;\n")),(0,r.kt)("p",null,"Since QuestDB allows you to omit the ",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT * FROM")," part of the query, we\nomitted it to keep the query compact."),(0,r.kt)("p",null,"Such a combination is very powerful since it allows you to find the latest\nvalues for a time-slice of the data and then apply a filter to them in a single\nquery."))}u.isMDXComponent=!0}}]);