"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[2199],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(a),c=r,f=u["".concat(p,".").concat(c)]||u[c]||m[c]||i;return a?n.createElement(f,o(o({ref:t},s),{},{components:a})):n.createElement(f,o({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},92022:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),o=["components"],l={},p={unversionedId:"guides/modifying-data",id:"guides/modifying-data",isDocsHomePage:!1,title:"Modify data",description:"QuestDB is a timeseries database optimized to append data.",source:"@site/docs/guides/modifying-data.md",sourceDirName:"guides",slug:"/guides/modifying-data",permalink:"/docs/guides/modifying-data",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/guides/modifying-data.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"CSV import via REST API",permalink:"/docs/guides/importing-data-rest"},next:{title:"Timestamps and time zones",permalink:"/docs/guides/working-with-timestamps-timezones"}},d=[{value:"Append newest state",id:"append-newest-state",children:[{value:"Using the timestamp field",id:"using-the-timestamp-field",children:[]},{value:"Using dedicated fields",id:"using-dedicated-fields",children:[]}]},{value:"Replace Table",id:"replace-table",children:[]},{value:"Delete by Dropping Partitions",id:"delete-by-dropping-partitions",children:[]}],s={toc:d};function m(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"QuestDB is a timeseries database optimized to append data."),(0,i.kt)("p",null,"For best performance, design your application to avoid having to frequently\nedit existing records."),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/sql/update"},(0,i.kt)("inlineCode",{parentName:"a"},"UPDATE"))," statement is available in QuestDB\nsince version 6.4, ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE")," is also planned to be included in upcoming releases.\nHowever, they are intended for correcting data that was inserted incorrectly\nor should have never been inserted in the first place (for example as part\nof data administration tasks)."),(0,i.kt)("p",null,"These are three alternatives to ",(0,i.kt)("inlineCode",{parentName:"p"},"UPDATE")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE")," you may consider:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#append-newest-state"},"Append newest state"),": Insert a newer state to replace\nan older one: This has the added advantage that you can query back\nin time to a previous state. It is also the basis of organizing data for\n",(0,i.kt)("a",{parentName:"p",href:"https://martinfowler.com/articles/bitemporal-history.html"},"bi-temporality"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#replace-table"},"Replace a table"),": Create a new table with the new data you\nneed, drop the old one and rename.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#delete-by-dropping-partitions"},"Delete by dropping partitions"),": Create your\ntimeseries tables with partitions, then delete the ones you no longer need."))),(0,i.kt)("h2",{id:"append-newest-state"},"Append newest state"),(0,i.kt)("h3",{id:"using-the-timestamp-field"},"Using the timestamp field"),(0,i.kt)("p",null,"Here's a worked example using the timestamp column:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"CREATE TABLE takeaway_order (\n    ts TIMESTAMP,\n    id SYMBOL,\n    status SYMBOL)\n        timestamp(ts);\n\nINSERT INTO takeaway_order VALUES (now(), 'order1', 'placed');\nINSERT INTO takeaway_order VALUES (now(), 'order2', 'placed');\nINSERT INTO takeaway_order VALUES (now(), 'order1', 'cooking');\nINSERT INTO takeaway_order VALUES (now(), 'order1', 'in-transit');\nINSERT INTO takeaway_order VALUES (now(), 'order1', 'arrived');\nINSERT INTO takeaway_order VALUES (now(), 'order3', 'placed');\nINSERT INTO takeaway_order VALUES (now(), 'order3', 'cooking');\nINSERT INTO takeaway_order VALUES (now(), 'order3', 'in-transit');\n")),(0,i.kt)("p",null,"We join the latest timestamp of an order id against the rest of the data to\nobtain full details."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"WITH\n    ts_takeaway_order AS (\n        SELECT\n            max(ts) AS ts,\n            id\n        FROM\n            takeaway_order GROUP BY id)\nSELECT\n    o.*\nFROM\n    ts_takeaway_order ts_o\n    INNER JOIN 'takeaway_order' o\n    ON ts_o.ts = o.ts\n")),(0,i.kt)("p",null,"This results in the latest state for each order:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"th"},"timestamp")," ts"),(0,i.kt)("th",{parentName:"tr",align:"left"},"id ",(0,i.kt)("em",{parentName:"th"},"symbol")),(0,i.kt)("th",{parentName:"tr",align:"left"},"status ",(0,i.kt)("em",{parentName:"th"},"symbol")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"2022-04-07T15:33:43.944922Z"),(0,i.kt)("td",{parentName:"tr",align:"left"},"order1"),(0,i.kt)("td",{parentName:"tr",align:"left"},"arrived")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"2022-04-07T15:33:37.370694Z"),(0,i.kt)("td",{parentName:"tr",align:"left"},"order2"),(0,i.kt)("td",{parentName:"tr",align:"left"},"placed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"2022-04-07T15:33:50.829323Z"),(0,i.kt)("td",{parentName:"tr",align:"left"},"order3"),(0,i.kt)("td",{parentName:"tr",align:"left"},"in-transit")))),(0,i.kt)("h3",{id:"using-dedicated-fields"},"Using dedicated fields"),(0,i.kt)("p",null,"If timestamps don't work for you here, you can also use an extra integer column\ncalled ",(0,i.kt)("inlineCode",{parentName:"p"},"version"),", an extra boolean ",(0,i.kt)("inlineCode",{parentName:"p"},"deleted")," column or similar."),(0,i.kt)("h2",{id:"replace-table"},"Replace Table"),(0,i.kt)("p",null,"Another alternative is to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Select only the data you want from an existing table into a new temporary one."),(0,i.kt)("li",{parentName:"ul"},"Drop the original table."),(0,i.kt)("li",{parentName:"ul"},"Rename the temporary table to the original table's name.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-questdb-sql"},"CREATE TABLE mytable_copy AS (\n    SELECT * FROM mytable WHERE column_value != 42\n) TIMESTAMP(ts) PARTITION BY DAY;\n\nDROP TABLE mytable;\nRENAME table mytable_copy TO mytable;\n")),(0,i.kt)("h2",{id:"delete-by-dropping-partitions"},"Delete by Dropping Partitions"),(0,i.kt)("p",null,"When you create tables with a timestamp, you may organise them into\n",(0,i.kt)("a",{parentName:"p",href:"/docs/concept/partitions"},"partitions")," using the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/sql/create-table#partitioning"},(0,i.kt)("inlineCode",{parentName:"a"},"CREATE TABLE .. PARTITION BY")),"\nSQL statement."),(0,i.kt)("p",null,"You may then use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/sql/alter-table-drop-partition"},(0,i.kt)("inlineCode",{parentName:"a"},"ALTER TABLE DROP PARTITION")),"\nSQL statement to drop partitions you no longer need."))}m.isMDXComponent=!0}}]);