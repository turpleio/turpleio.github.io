"use strict";(self.webpackChunkquestdb_io=self.webpackChunkquestdb_io||[]).push([[185],{3905:function(e,t,i){i.d(t,{Zo:function(){return c},kt:function(){return p}});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=a.createContext({}),m=function(e){var t=a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},c=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=m(i),p=n,g=u["".concat(l,".").concat(p)]||u[p]||d[p]||o;return i?a.createElement(g,r(r({ref:t},c),{},{components:i})):a.createElement(g,r({ref:t},c))}));function p(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,r=new Array(o);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var m=2;m<o;m++)r[m]=i[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},5261:function(e,t,i){i.r(t),i.d(t,{frontMatter:function(){return l},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var a=i(3117),n=i(102),o=(i(7294),i(3905)),r=i(2525),s=["components"],l={title:"Optimizing ingestion with commit lag configuration",sidebar_label:"Out-of-order commit lag",description:"This document describes server configuration parameters for out-of-order commit-lag along with details when and why these settings should be applied",image:"/img/guides/out-of-order-commit-lag/o3-data.jpeg"},m={unversionedId:"guides/out-of-order-commit-lag",id:"guides/out-of-order-commit-lag",isDocsHomePage:!1,title:"Optimizing ingestion with commit lag configuration",description:"This document describes server configuration parameters for out-of-order commit-lag along with details when and why these settings should be applied",source:"@site/docs/guides/out-of-order-commit-lag.md",sourceDirName:"guides",slug:"/guides/out-of-order-commit-lag",permalink:"/docs/guides/out-of-order-commit-lag",editUrl:"https://github.com/turpleio/homepage/edit/main/docs/guides/out-of-order-commit-lag.md",version:"current",sidebar_label:"Out-of-order commit lag",frontMatter:{title:"Optimizing ingestion with commit lag configuration",sidebar_label:"Out-of-order commit lag",description:"This document describes server configuration parameters for out-of-order commit-lag along with details when and why these settings should be applied",image:"/img/guides/out-of-order-commit-lag/o3-data.jpeg"},sidebar:"docs",previous:{title:"Timestamps and time zones",permalink:"/docs/guides/working-with-timestamps-timezones"},next:{title:"Launch the official QuestDB AMI via the AWS Marketplace",permalink:"/docs/deployment/aws-official-ami"}},c=[{value:"What is a commit lag?",id:"what-is-a-commit-lag",children:[]},{value:"Benefits of commit lag configuration",id:"benefits-of-commit-lag-configuration",children:[]},{value:"Commit lag and commit timing",id:"commit-lag-and-commit-timing",children:[]},{value:"When to change the commit lag value",id:"when-to-change-the-commit-lag-value",children:[]},{value:"How to configure O3 ingestion",id:"how-to-configure-o3-ingestion",children:[{value:"Out-of-order CSV import",id:"out-of-order-csv-import",children:[]}]}],d={toc:c};function u(e){var t=e.components,i=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Deprecated content")),(0,o.kt)("p",{parentName:"div"},"This page applies to QuestDB 6.5.5 and earlier versions. From\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/questdb/questdb/releases/tag/6.6"},"QuestDB 6.6")," onwards, the\ndatabase adjusts relevant settings automatically and provides maximum ingestion\nspeed."))),(0,o.kt)("p",null,"The QuestDB commit lag configuration provides options to optimize data ingestion\nefficiency, when:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ingesting data over InfluxDB Line Protocol (ILP), and"),(0,o.kt)("li",{parentName:"ul"},"receiving out-of-order (O3) data.")),(0,o.kt)("p",null,"As of software version 6.0, QuestDB adds support for O3 data ingestion. The skew\nand latency of out-of-order data are likely to be relatively constant, so users\nmay configure ingestion based on the characteristics of the data for optimum\nthroughput."),(0,o.kt)("p",null,"This page explains the concept of commit lag and\n",(0,o.kt)("a",{parentName:"p",href:"#how-to-configure-o3-ingestion"},"the way to configure it"),"."),(0,o.kt)("h2",{id:"what-is-a-commit-lag"},"What is a commit lag?"),(0,o.kt)("p",null,"Most real-time O3 data patterns are caused by the delivery mechanism and\nhardware jitter, and therefore the timestamp distribution tends to be contained\nby some boundary."),(0,o.kt)(r.Z,{alt:"A diagram showing how data may arrive with random timings from clients due to network jitter or latency",height:334,src:"/img/guides/out-of-order-commit-lag/o3-data.jpeg",title:"Records with various network-induced delays",width:650,mdxType:"Screenshot"}),(0,o.kt)("p",null,"If any new timestamp value has a high probability to arrive within 10 seconds of\nthe previously received value, the boundary for this data is ",(0,o.kt)("inlineCode",{parentName:"p"},"10 seconds")," and we\nname this ",(0,o.kt)("strong",{parentName:"p"},"commit lag")," or just ",(0,o.kt)("strong",{parentName:"p"},"lag"),"."),(0,o.kt)("p",null,"Data received within the commit lag value is kept in memory only, and invisible\nfrom queries. Our out-of-order algorithm detects and prioritizes the data using\nan optimized processing path to commit later. Once committed, the data is\nvisible for queries."),(0,o.kt)("h2",{id:"benefits-of-commit-lag-configuration"},"Benefits of commit lag configuration"),(0,o.kt)("p",null,"QuestDB stores all table data physically sorted by designated timestamp. When\nall data is received in a chronological order, this operation is\nstraight-forward. If QuestDB ingests a row with a designated timestamp earlier\nthan the latest timestamp already committed for one table, this row is\nout-of-order and QuestDB's engine needs to re-sort the existing data on disk.\nThe operation to ingest O3 data is therefore costly."),(0,o.kt)("p",null,"For optimal ingestion performance, the number of O3 data commits should be\nminimized. Configuring the commit lag based on data usage is therefore a way to\noptimize data ingestion, by accumulating data for a set period of time, sorting\nthe collected data in order, and committing it to memory. Although data may not\nbe immediately visible as a result of the commit lag setting, the overall data\ningestion efficiency can be improved."),(0,o.kt)("h2",{id:"commit-lag-and-commit-timing"},"Commit lag and commit timing"),(0,o.kt)("p",null,"Commit lag is a user configurable value. On the server level configuration, the\nvalue is defined in milliseconds by ",(0,o.kt)("inlineCode",{parentName:"p"},"cairo.commit.lag"),". Commit lag has an impact\non the timing of commit, as the value is combined with other parameters for\n",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/api/ilp/tcp-receiver#commit-strategy"},"ILP commit strategy"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"cairo.commit.lag")," value is applied each time when a commit happens. As a\nresult, data older than the lag value will be committed and become visible."),(0,o.kt)("h2",{id:"when-to-change-the-commit-lag-value"},"When to change the commit lag value"),(0,o.kt)("p",null,"The commit lag value should be considered together with\n",(0,o.kt)("inlineCode",{parentName:"p"},"cairo.max.uncommitted.rows")," as part of the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/api/ilp/tcp-receiver#commit-strategy"},"ILP commit strategy"),"."),(0,o.kt)("p",null,"The default configuration for the server is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini",metastring:'title="Defaults"',title:'"Defaults"'},"cairo.commit.lag=300000\n# The commit lag value is set in milliseconds.\ncairo.max.uncommitted.rows=500000\n")),(0,o.kt)("p",null,"Users should modify these parameters based on any known or expected pattern for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The length of time by which most records are late"),(0,o.kt)("li",{parentName:"ul"},"The frequency of incoming records and the expected throughput"),(0,o.kt)("li",{parentName:"ul"},"The freshness of the data used in queries")),(0,o.kt)("p",null,"To minimize the number of O3 data commits, if the throughput is low and\ntimestamps are expected to be consistently delayed up to 30 seconds, the\nfollowing configuration settings can be applied:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini",metastring:'title="server.conf"',title:'"server.conf"'},"cairo.commit.lag=30000\ncairo.max.uncommitted.rows=500\n")),(0,o.kt)("p",null,"For high-throughput scenarios, a lower commit lag value combined with a larger\nnumber of uncommitted rows may be more appropriate. The following settings would\nassume a throughput of ten thousand records per second with a likely maximum of\n1 second lateness for timestamp values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini",metastring:'title="server.conf"',title:'"server.conf"'},"cairo.commit.lag=1000\ncairo.max.uncommitted.rows=10000\n")),(0,o.kt)("h2",{id:"how-to-configure-o3-ingestion"},"How to configure O3 ingestion"),(0,o.kt)("p",null,"QuestDB provides the following O3 data ingestion configuration options; users\ncan choose the most suitable configuration based on their specific case:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Server-wide configuration:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cairo.commit.lag")," in\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/configuration/#cairo-engine"},"Cairo engine")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Table configuration:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Setting table parameters via SQL using\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/sql/alter-table-set-param#example"},"SET PARAM")),(0,o.kt)("li",{parentName:"ul"},"Creating table with parameters via SQL using\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/sql/create-table/#create-table-with-parameters"},"WITH")),(0,o.kt)("li",{parentName:"ul"},"SQL ",(0,o.kt)("inlineCode",{parentName:"li"},"INSERT AS SELECT")," with batch size and lag:\n",(0,o.kt)("a",{parentName:"li",href:"/docs/reference/sql/insert/#inserting-query-results"},"Inserting query results")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Import configuration:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/guides/out-of-order-commit-lag/#out-of-order-csv-import"},"Out-of-order CSV import"))))),(0,o.kt)("h3",{id:"out-of-order-csv-import"},"Out-of-order CSV import"),(0,o.kt)("p",null,"It is possible to set ",(0,o.kt)("inlineCode",{parentName:"p"},"commitLag")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"maxUncommittedRows")," via REST API when\nimporting data via the ",(0,o.kt)("inlineCode",{parentName:"p"},"/imp")," endpoint. The ",(0,o.kt)("inlineCode",{parentName:"p"},"commitLag")," unit is microsecond. The\nfollowing example imports a file which contains out-of-order records. The\n",(0,o.kt)("inlineCode",{parentName:"p"},"timestamp")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"partitionBy")," parameters ",(0,o.kt)("strong",{parentName:"p"},"must be provided")," for commit lag and\nmax uncommitted rows to have any effect:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl -F data=@weather.csv \\\n'http://localhost:9000/imp?&timestamp=ts&partitionBy=DAY&commitLag=120000000&maxUncommittedRows=10000'\n\n# The commitLag value is set in microseconds.\n")))}u.isMDXComponent=!0},6010:function(e,t,i){function a(e){var t,i,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(i=a(e[t]))&&(n&&(n+=" "),n+=i);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}function n(){for(var e,t,i=0,n="";i<arguments.length;)(e=arguments[i++])&&(t=a(e))&&(n&&(n+=" "),n+=t);return n}i.d(t,{Z:function(){return n}})}}]);